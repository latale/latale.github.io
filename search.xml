<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[webpack配置js打包+css分离+图片压缩]]></title>
      <url>/2018/02/03/webpack%E9%85%8D%E7%BD%AEjs%E6%89%93%E5%8C%85-css%E5%88%86%E7%A6%BB/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>css分离用了extract-text-webpack-plugin插件,js压缩用了uglifyjs-webpack-plugin插件or用webpack自带的webpack.optimize.UglifyJsPlugin方法<br><a id="more"></a></p>
<pre><code>webpack.config.js
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">const path = require(&apos;path&apos;);</span><br><span class="line">const uglify = require(&apos;uglifyjs-webpack-plugin&apos;);</span><br><span class="line">const htmlWebpackPlugin = require(&apos;html-webpack-plugin&apos;);</span><br><span class="line">const extractTextWebpackPlugin = require(&apos;extract-text-webpack-plugin&apos;);</span><br><span class="line">const webpack = require(&apos;webpack&apos;);</span><br><span class="line"></span><br><span class="line">module.exports = &#123;</span><br><span class="line">    context: path.join(__dirname, &apos;src&apos;), //设置根目录</span><br><span class="line">    entry:&#123;</span><br><span class="line">        entry:&apos;./entry.js&apos; //入口文件</span><br><span class="line">    &#125;,</span><br><span class="line">    output:&#123;</span><br><span class="line">        path: path.resolve(__dirname,&apos;dist/js&apos;), //打包输出文件</span><br><span class="line">        filename: &apos;[name].js&apos;, //输出文件名</span><br><span class="line">        publicPath: &apos;/&apos;  //html引用的虚拟路径</span><br><span class="line">    &#125;,</span><br><span class="line">    module:&#123;</span><br><span class="line">        rules:[</span><br><span class="line">            &#123;</span><br><span class="line">              test:&apos;/\.(js|jsx)$/&apos;,</span><br><span class="line">              exclude: /node_modules/, //  忽略依赖</span><br><span class="line">              use:[&apos;babel-loader&apos;]</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              test:/\.css$/,</span><br><span class="line">              use:extractTextWebpackPlugin.extract(&#123;  //打包css文件以及分离</span><br><span class="line">                  fallback:&apos;style-loader&apos;,</span><br><span class="line">                  use:[</span><br><span class="line">                      &#123;</span><br><span class="line">                          loader:&apos;css-loader&apos;</span><br><span class="line">                      &#125;,</span><br><span class="line">                      &#123;</span><br><span class="line">                          loader:&apos;postcss-loader&apos;, //加浏览器前缀</span><br><span class="line">                          options:&#123;</span><br><span class="line">                              plugins: [</span><br><span class="line">                                  require(&apos;autoprefixer&apos;) //要设置下postcss里的autoprefixer插件</span><br><span class="line">                              ]</span><br><span class="line">                          &#125;</span><br><span class="line">                      &#125;</span><br><span class="line">                  ]</span><br><span class="line">              &#125;)</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              test:/\.less$/,</span><br><span class="line">              use:extractTextWebpackPlugin.extract(&#123; //打包less文件成css以及分离</span><br><span class="line">                  use: [&apos;css-loader&apos;,&apos;less-loader&apos;],</span><br><span class="line">                  // loader:[&apos;css-loader&apos;,&apos;less-loader&apos;],</span><br><span class="line">                  // use:&apos;css-loader!less-loader&apos;,</span><br><span class="line">                  fallback: &quot;style-loader&quot;</span><br><span class="line">              &#125;)</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">              test:/\.(sass|scss)$/,</span><br><span class="line">                use:extractTextWebpackPlugin.extract(&#123; ////打包scss文件成css以及分离</span><br><span class="line">                    use:[&apos;css-loader&apos;,&apos;sass-loader&apos;,&#123;</span><br><span class="line">                        loader:&apos;postcss-loader&apos;,  //加浏览器前缀 </span><br><span class="line">                        options: &#123;</span><br><span class="line">                            plugins: (loader) =&gt; [</span><br><span class="line">                                require(&apos;autoprefixer&apos;), //要配置下postcss里的autoprefixer插件</span><br><span class="line">                            ]</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;]</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;,</span><br><span class="line">            &#123;</span><br><span class="line">                test:/\.(jpg|png|gif|jpeg)$/,</span><br><span class="line">                use:[</span><br><span class="line">                    &#123;</span><br><span class="line">                        loader:&apos;url-loader&apos;, //图片压缩</span><br><span class="line">                        options:&#123;</span><br><span class="line">                            limit:8192,</span><br><span class="line">                            name:&apos;images/[name][hash:8].[ext]&apos;, //指定名字</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;,</span><br><span class="line">    plugins: [</span><br><span class="line">        new webpack.optimize.UglifyJsPlugin(), //js压缩</span><br><span class="line">        new htmlWebpackPlugin(&#123;</span><br><span class="line">            minify:&#123;</span><br><span class="line">                removeAttributeQuotes:true</span><br><span class="line">            &#125;,</span><br><span class="line">            hash:true,</span><br><span class="line">            template:&apos;index.html&apos;</span><br><span class="line">        &#125;),</span><br><span class="line">        new extractTextWebpackPlugin(&quot;css/[name].css&quot;), //配置分离css文件的路径名</span><br><span class="line">        new webpack.ProvidePlugin(&#123; //配置jquery</span><br><span class="line">            $: &quot;jquery&quot;, //别名</span><br><span class="line">            jQuery: &quot;jquery&quot;</span><br><span class="line">        &#125;)</span><br><span class="line">    ],</span><br><span class="line">    node: &#123;</span><br><span class="line">        fs: &apos;empty&apos;</span><br><span class="line">    &#125;,</span><br><span class="line">    devServer:&#123;</span><br><span class="line">        contentBase:path.resolve(__dirname,&apos;dist&apos;), //根目录路径</span><br><span class="line">        host:&apos;localhost&apos;,</span><br><span class="line">        inline: true, //实时刷新</span><br><span class="line">        hot:true,  //热加载</span><br><span class="line">        compress:true, //压缩</span><br><span class="line">        port:7777</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<pre><code>css
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.pic&#123;</span><br><span class="line">    background:url(&apos;../images/xika.jpeg&apos;);</span><br><span class="line">    width:500px;</span><br><span class="line">    height:500px;</span><br><span class="line">    background-size:cover;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<pre><code>less
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@bg:#F7F7F7;</span><br><span class="line">body&#123;</span><br><span class="line">  background:@bg;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<pre><code>scss
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">@mixin borderCircle &#123;</span><br><span class="line">  border-radius:50%;</span><br><span class="line">&#125;</span><br><span class="line">@mixin display-flex &#123;</span><br><span class="line">  display: flex;</span><br><span class="line">&#125;</span><br><span class="line">.pic&#123;</span><br><span class="line">  @include borderCircle;</span><br><span class="line">  @include display-flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<pre><code>entry.js
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">import css from &apos;./css/index.css&apos;;</span><br><span class="line">import less from &apos;./less/index.less&apos;;</span><br><span class="line">import scss from &apos;./scss/index.scss&apos;;</span><br><span class="line">import bootstrap from &apos;bootstrap/dist/css/bootstrap.css&apos;;</span><br><span class="line"></span><br><span class="line">$(&apos;#app&apos;).addClass(&apos;text-center container&apos;);</span><br><span class="line">$(&apos;.pic&apos;).css(&apos;margin&apos;,&apos;auto&apos;);</span><br><span class="line">$(&apos;#app&apos;).append(&apos;&lt;h1&gt;hello world&lt;/h1&gt;&apos;)</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<pre><code>package.json
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&quot;scripts&quot;: &#123;</span><br><span class="line">  &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;,</span><br><span class="line">  &quot;start&quot;: &quot;webpack-dev-server --inline --hot&quot;</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure>
<pre><code>打开localhost:7777
</code></pre>]]></content>
      
        
        <tags>
            
            <tag> js </tag>
            
            <tag> webpack </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[python常用文件操作]]></title>
      <url>/2018/01/07/pythonOS/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>python常用文件操作<br><a id="more"></a></p>
<p>ps…记录一些常用的文件操作<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#获取系统模块参数</span><br><span class="line"># print(os.environ.keys())</span><br><span class="line"></span><br><span class="line">#系统盘符</span><br><span class="line"># print(os.environ[&apos;HOME&apos;])</span><br><span class="line"></span><br><span class="line">#用户盘符</span><br><span class="line"># print(os.environ[&apos;PWD&apos;])</span><br><span class="line"></span><br><span class="line">#window根目录</span><br><span class="line"># print(os.environ[&apos;SYSTEMROOT&apos;])</span><br><span class="line"></span><br><span class="line">#路径拼接</span><br><span class="line">print(os.path.join(&apos;d://&apos;,&apos;music&apos;))</span><br><span class="line"></span><br><span class="line">#当前文件读取指针</span><br><span class="line">open(&apos;111.txt&apos;).tell()</span><br><span class="line"></span><br><span class="line">#移动指针</span><br><span class="line">open(&apos;111.txt&apos;).seek(0,1)</span><br><span class="line"></span><br><span class="line">#当前文件目录</span><br><span class="line">a = os.getcwd()</span><br><span class="line">c = os.environ[&apos;PWD&apos;]</span><br><span class="line"># print(a,b,c)</span><br><span class="line"></span><br><span class="line">#当前文件路径</span><br><span class="line">os.path.realpath(__file__)</span><br><span class="line"></span><br><span class="line">#当前文件名</span><br><span class="line">__file__</span><br><span class="line"></span><br><span class="line">#创建文件夹</span><br><span class="line">os.mkdir()</span><br><span class="line"></span><br><span class="line">#重命名文件</span><br><span class="line">os.rename()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">w     以写方式打开，</span><br><span class="line">a     以追加模式打开</span><br><span class="line">r+     以读写模式打开</span><br><span class="line">w+     以读写模式打开</span><br><span class="line">a+     以读写模式打开</span><br><span class="line">rb     以二进制读模式打开</span><br><span class="line">wb     以二进制写模式打开</span><br><span class="line">ab     以二进制追加模式打开</span><br><span class="line">rb+    以二进制读写模式打开</span><br><span class="line">wb+    以二进制读写模式打开</span><br><span class="line">ab+    以二进制读写模式打开</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def fillfile():</span><br><span class="line">  global new_folders,loopText,loop,os</span><br><span class="line">  os.mkdir(new_folders)</span><br><span class="line">  root = os.getcwd()</span><br><span class="line">  directory = root + os.sep + new_folders + os.sep</span><br><span class="line">  for i in range(0,100):</span><br><span class="line">    open(directory + repr(i) + &apos;.txt&apos;,&apos;w&apos;)</span><br><span class="line"></span><br><span class="line">  return directory</span><br><span class="line"></span><br><span class="line">#输出指定目录下的文件</span><br><span class="line">def outputDirs():</span><br><span class="line">  dir = input(&quot;请输入需要输入的目录:\n&quot;)</span><br><span class="line">  if(os.path.isdir(dir)):</span><br><span class="line">    dirs = os.listdir(dir)</span><br><span class="line">    getDirs(dirs)</span><br><span class="line">  else:</span><br><span class="line">    print(&quot;未找到此目录&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def getDirs(dirs):</span><br><span class="line">  for i,e in enumerate(dirs):</span><br><span class="line">    print(&quot;No.%d\tname:%s&quot;%(i,e))</span><br><span class="line"></span><br><span class="line">#搜索文件</span><br><span class="line">def searchFile():</span><br><span class="line">  file_name = input(&quot;请输入要搜索的文件名:\n&quot;)</span><br><span class="line">  if os.path.isfile(file_name):</span><br><span class="line">    print(&quot;您搜索的文件路径位于:%s&quot;%(file_name))</span><br><span class="line"></span><br><span class="line">#搜索文件是否存在</span><br><span class="line">def searchFileStatus(file_name):</span><br><span class="line">  if os.path.isfile(file_name):</span><br><span class="line">    return True</span><br><span class="line">  else:</span><br><span class="line">    return False</span><br><span class="line"></span><br><span class="line">#读取文件</span><br><span class="line">def readFile():</span><br><span class="line">      file_name = input(&quot;请输入要读取的文件名:&quot;)</span><br><span class="line">      if searchFileStatus(file_name):</span><br><span class="line">            while True:</span><br><span class="line">              open_file = open(file_name,&apos;r&apos;)</span><br><span class="line">              content = open_file.readlines()</span><br><span class="line">              if len(content) == 0:</span><br><span class="line">                    break</span><br><span class="line">              print(content)</span><br><span class="line">            </span><br><span class="line"></span><br><span class="line">def searchFileForRename():</span><br><span class="line">  file_name = input(&quot;请输入要查找的文件名:\t(dirname+basebame)\n&quot;)</span><br><span class="line">  if os.path.isfile(file_name):</span><br><span class="line">    new_file_name = input(&quot;要重命名的文件名:\t(basebame)\n&quot;)</span><br><span class="line">    return (file_name,new_file_name)</span><br><span class="line">  else:</span><br><span class="line">    print(&quot;未找到此文件&quot;)</span><br><span class="line"></span><br><span class="line">#重命名文件</span><br><span class="line">def rename():</span><br><span class="line">  (a,b) = searchFileForRename()</span><br><span class="line">  realDirPath = os.path.dirname(a)</span><br><span class="line">  os.rename(a,realDirPath + os.sep + b)</span><br><span class="line">  print(&quot;旧文件名:%s\t新文件名:%s&quot;%(a,b))</span><br><span class="line"></span><br><span class="line">#写入文件</span><br><span class="line">def writeFile():</span><br><span class="line">  file_name = input(&quot;请输入要写入的文件名:\n&quot;)</span><br><span class="line">  if searchFileStatus(file_name):</span><br><span class="line">    file = open(file_name,&apos;w&apos;)</span><br><span class="line">    content = input(&quot;请输入要写入的内容:\n&quot;)</span><br><span class="line">    file.write(content)</span><br><span class="line">    print(&quot;写入完成&quot;)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#GUI</span><br><span class="line">def dashboard():</span><br><span class="line">  mode = input(</span><br><span class="line">    &quot;=&quot;*20</span><br><span class="line">    +&quot;\n文件操作小工具&quot;</span><br><span class="line">    +&quot;\n1.搜索文件\n2.重命名文件\n3.列出指定目录下的文件\nt4.读取文件\n5.写入文件\n&quot;+</span><br><span class="line">    &quot;=&quot;*20 + &quot;\n&quot;</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">  if int(mode) == 1:</span><br><span class="line">    searchFile()</span><br><span class="line">  elif int(mode) == 2:</span><br><span class="line">    rename()</span><br><span class="line">  elif int(mode) == 3:</span><br><span class="line">    outputDirs()</span><br><span class="line">  elif int(mode) == 4:</span><br><span class="line">    readFile()</span><br><span class="line">  elif int(mode) == 5:</span><br><span class="line">    writeFile()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># dashboard()</span><br><span class="line"></span><br><span class="line">=============面向对象版本================</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">class FileSystem:</span><br><span class="line">    def __init__(self):</span><br><span class="line">        self.mode = 0</span><br><span class="line">        self.modeDes = [&apos;读取文件&apos;,&apos;创建文件&apos;,&apos;列出指定目录下的文件&apos;,&apos;删除文件&apos;,&apos;重命名文件&apos;]</span><br><span class="line">        self.selectMode()</span><br><span class="line">        self.callMethod()</span><br><span class="line">        </span><br><span class="line">    def selectMode(self):</span><br><span class="line">        print(&quot;请输入要操作的方法:\n&quot;)</span><br><span class="line">        print(&quot;=&quot;*20)</span><br><span class="line">        for i,e in enumerate(self.modeDes):</span><br><span class="line">            print(&quot;%d.%s&quot;%(i+1,e))</span><br><span class="line">        print(&quot;=&quot;*20)</span><br><span class="line">        mode = int(input())</span><br><span class="line">        self.mode = mode</span><br><span class="line"></span><br><span class="line">    def callMethod(self):</span><br><span class="line">        if self.mode == 1:</span><br><span class="line">            self.readFile()</span><br><span class="line">        elif self.mode == 2:</span><br><span class="line">            self.mkFile()</span><br><span class="line">        elif self.mode == 3:</span><br><span class="line">            self.outputDirs()</span><br><span class="line">        elif self.mode == 4:</span><br><span class="line">            self.deleteFile()</span><br><span class="line">        elif self.mode == 5:</span><br><span class="line">            self.renameFile()</span><br><span class="line"></span><br><span class="line">    def readFile(self):</span><br><span class="line">        file_name = self.getPrint(&quot;请输入要读取的文件:\n&quot;)</span><br><span class="line">        if self.fileExist(file_name):</span><br><span class="line">            open_file = open(file_name,&apos;r&apos;)</span><br><span class="line">            while True:</span><br><span class="line">                content = open_file.readline()</span><br><span class="line">                if len(content) == 0:</span><br><span class="line">                    break</span><br><span class="line">                print(content)</span><br><span class="line"></span><br><span class="line">    def mkFile(self):</span><br><span class="line">        print(&quot;请输入要创建的文件:&quot;)</span><br><span class="line">        file_name = input()</span><br><span class="line">        if ~self.fileExist(file_name):</span><br><span class="line">            open(file_name,&apos;w&apos;)</span><br><span class="line">            print(&quot;创建成功&quot;)</span><br><span class="line">        else:</span><br><span class="line">            print(&quot;文件已存在,请重命名文件&quot;)</span><br><span class="line"></span><br><span class="line">    def outputDirs(self):</span><br><span class="line">        dir = self.getPrint(&quot;请输入指定目录下的文件&quot;)</span><br><span class="line">        if self.dirExist(dir):</span><br><span class="line">            files = os.listdir(dir)</span><br><span class="line">            for file in files:</span><br><span class="line">                print(file)</span><br><span class="line">    </span><br><span class="line">    def deleteFile(self):</span><br><span class="line">        self.getPrint(&quot;请输入要删除的文件:\n&quot;)</span><br><span class="line">        if self.fileExist(file_name):</span><br><span class="line">            os.remove(file_name)</span><br><span class="line">            print(&quot;删除成功&quot;)</span><br><span class="line">        else:</span><br><span class="line">            print(&quot;文件不存在&quot;)</span><br><span class="line"></span><br><span class="line">    def renameFile(self):</span><br><span class="line">        file_name = self.getPrint(&quot;请输入要重命名的文件:\n&quot;)</span><br><span class="line">        if self.fileExist(file_name):</span><br><span class="line">            new_file_name = input(&quot;请输入新的文件名:&quot;)</span><br><span class="line">            if self.fileExist(new_file_name):</span><br><span class="line">                print(&quot;文件名已经存在,请重新输入&quot;)</span><br><span class="line">            else:</span><br><span class="line">                os.rename(file_name,new_file_name)</span><br><span class="line">                print(&quot;重命名文件名成功&quot;)</span><br><span class="line">            </span><br><span class="line">    def fileExist(self,file):</span><br><span class="line">        if os.path.isfile(file):</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line"></span><br><span class="line">    def dirExist(self,dir):</span><br><span class="line">        if os.path.isdir(dir):</span><br><span class="line">            return True</span><br><span class="line">        else:</span><br><span class="line">            return False</span><br><span class="line">    </span><br><span class="line">    def getPrint(self,str):</span><br><span class="line">        print(str)</span><br><span class="line">        file_name = input()</span><br><span class="line">        return file_name</span><br><span class="line">        </span><br><span class="line">    </span><br><span class="line">FileSystem()</span><br><span class="line"></span><br></pre></td></tr></table></figure></p>
]]></content>
      
        
        <tags>
            
            <tag> python </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[好看的风景]]></title>
      <url>/2017/11/11/build1/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>好看的风景- -</p>
<hr>
<p>emmmmm……<br><a id="more"></a></p>
<p><img src="https://github.com/latale/photos/blob/master/b1.jpg?raw=true" alt=""><br><img src="https://raw.githubusercontent.com/latale/photos/master/IMG_20180110_174405B.jpg" alt=""></p>
]]></content>
      
        
        <tags>
            
            <tag> 瞎扯淡 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Laravel常用实例类]]></title>
      <url>/2017/11/11/ajax/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="Laravel常用实例类"><a href="#Laravel常用实例类" class="headerlink" title="Laravel常用实例类"></a>Laravel常用实例类</h2><a id="more"></a>
<pre><code>Illuminate\Http\Request;
Illuminate\Http\Response;
Illuminate\Support\Facades\Input;
Session;
Illuminate\Support\Facades\Schema;
Illuminate\Support\Facades\Session;
</code></pre>]]></content>
      
        
        <tags>
            
            <tag> laravel </tag>
            
            <tag> php </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[nginx配置Laravel项目]]></title>
      <url>/2017/11/03/nginx/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>nginx配置Laravel项目</p>
<p>配置Laravel项目可以用Apache,Homestead,也可以用nginx。\ue415</p>
<a id="more"></a>
<pre><code>1.下载nginx
</code></pre><p>先去<a href="http://nginx.org/en/download.html下载nginx,下载对应系统的nginx,然后解压在一个盘符里,我的是E盘,所以对应的路径就是E:\nginx-1.13.6" target="_blank" rel="noopener">http://nginx.org/en/download.html下载nginx,下载对应系统的nginx,然后解压在一个盘符里,我的是E盘,所以对应的路径就是E:\nginx-1.13.6</a></p>
<pre><code>2.用记事本打开E:\nginx-1.13.6\conf\nginx.conf配置文件，找到以下区域,进行修改
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;</span><br><span class="line">      root   html;　　　　　　</span><br><span class="line">      index  index.html index.htm; </span><br><span class="line">&#125;</span><br><span class="line">修改为:</span><br><span class="line">location / &#123;</span><br><span class="line">root D:\phpStudy\WWW\myLaravel\public; //项目根目录</span><br><span class="line">index index index.html index.htm index.php; //入口文件</span><br><span class="line">try_files $uri $uri/ /index.php?query_string; //默认去除index.php</span><br><span class="line">&#125;</span><br><span class="line">找到以下区域,改配置,以及把#去掉</span><br><span class="line">location ~ \.php$ &#123;</span><br><span class="line">root D:\phpStudy\WWW\myLaravel\public; //项目根目录</span><br><span class="line">fastcgi_pass 127.0.0.1:9000; //启动php的端口</span><br><span class="line">fastcgi_index index.php; php的默认文件</span><br><span class="line">fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; //映射项目路径</span><br><span class="line">include fastcgi_params;</span><br></pre></td></tr></table></figure>
<pre><code>3.命令行启动php以及nginx(具体根据自己的php和nginx的路径)

php =&gt;  D:\phpStudy\php\php-7.0.12-nts\php-cgi.exe -b 127.0.0.1:9000 -c D:\phpStudy\php\php-7.0.12-nts\php.ini(-b -&gt; 启动的端口 -c -&gt; 指定php.ini文件)
</code></pre><p><img src="https://raw.githubusercontent.com/latale/photos/master/php.png" alt=""></p>
<pre><code>nginx =&gt; E:\nginx-1.13.6\nginx.exe -p E:\nginx-1.13.6(-p -&gt; 指定nginx安装目录)
</code></pre><p><img src="https://raw.githubusercontent.com/latale/photos/master/nginx.png" alt=""></p>
<pre><code>4.浏览器输入localhost
</code></pre><p><img src="https://raw.githubusercontent.com/latale/photos/master/laravel%E7%AE%80%E4%BB%8B%E5%9B%BE.png" alt=""></p>
<pre><code>PS =&gt; 有时候出现编码错误,在server里面添加charset utf-8;
</code></pre>]]></content>
      
        
        <tags>
            
            <tag> nginx </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JS常用正则表达式]]></title>
      <url>/2017/11/01/JS%E5%B8%B8%E7%94%A8%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>JS常用正则表达式</p>
<a id="more"></a>
<div><br>    <table><br>        <thead><br>            <tr><br>                <th>字符</th><br>                <th>含义</th><br>            </tr><br>        </thead><br>        <tbody><br>            <tr><br>                <td>.</td><br>                <td>匹配任意字符</td><br>            </tr><br>            <tr><br>                <td>?</td><br>                <td>匹配0个或者1个 =&gt; {0,1}</td><br>            </tr><br>            <tr><br>                <td>*</td><br>                <td>匹配0个或者以上 =&gt; {0,}</td><br>            </tr><br>            <tr><br>                <td>+</td><br>                <td>匹配1个或者以上 =&gt; {1,}</td><br>            </tr><br>            <tr><br>                <td>\s</td><br>                <td>匹配空格</td><br>            </tr><br>            <tr><br>                <td>\S</td><br>                <td>匹配非空格</td><br>            </tr><br>            <tr><br>                <td>\w</td><br>                <td>匹配字符a-zA-Z0-9_</td><br>            </tr><br>            <tr><br>                <td>\W</td><br>                <td>匹配非字符</td><br>            </tr><br>            <tr><br>                <td>\d</td><br>                <td>匹配数字0-9</td><br>            </tr><br>            <tr><br>                <td>\D</td><br>                <td>匹配非数字</td><br>            </tr><br>            <tr><br>                <td>\b</td><br>                <td>匹配独立部分(开始,空格,结束)</td><br>            </tr><br>            <tr><br>                <td>\B</td><br>                <td>匹配非独立部分</td><br>            </tr><br>    </tbody><br></table><br></div>


<pre><code>1.手机验证
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function validateTel(phone) &#123;</span><br><span class="line">    const reg = /^1[3|5|7|8][0-9]&#123;9&#125;$/;</span><br><span class="line">    return reg.test(phone);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<pre><code>2.邮箱验证
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function validateEmail(email) &#123;</span><br><span class="line">    const reg = /^[\w_-]+@[\w_-]+(\.[\w_-]+)+/;</span><br><span class="line">    return reg.test(email);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<pre><code>3. 前后去空
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">function trimString(str,where = ALL) &#123;</span><br><span class="line">    let reg = null;</span><br><span class="line">    switch(where) &#123;</span><br><span class="line">        case L:</span><br><span class="line">            reg = /^(\s+)/;</span><br><span class="line">            return str.replace(reg,&apos;&apos;);</span><br><span class="line">        case R:</span><br><span class="line">            reg = /(\s+)$/;</span><br><span class="line">            return str.replace(reg,&apos;&apos;);</span><br><span class="line">        case ALL:</span><br><span class="line">            req = /^(\s+)|(\s+)$/g;</span><br><span class="line">            return str.replace(reg,&apos;&apos;);</span><br><span class="line">        default:</span><br><span class="line">            return &apos;参数错误&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<pre><code>4.中文名字验证
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function validateCN(name) &#123;</span><br><span class="line">    const reg = /^[\u4E00-\u9FA5]&#123;2,4&#125;$/;</span><br><span class="line">    return reg.test(name);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<pre><code>5.格式化url参数
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">function formatURL(url) &#123;</span><br><span class="line">    const reg = /.*\?/;</span><br><span class="line">    url = url.replace(reg,&apos;&apos;);</span><br><span class="line">    let JSON = &#123;&#125;,item = null, urlArr = url.split(&apos;&amp;&apos;);</span><br><span class="line">    for(var i = 0; i&lt;urlArr.length; i++) &#123;</span><br><span class="line">        item = urlArr[i].split(&apos;=&apos;);</span><br><span class="line">        JSON[decodeURIComponent[item[0]]] = decodeURIComponent[item[1]];</span><br><span class="line">    &#125;</span><br><span class="line">return args;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> Javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[composer命令新建Laravel项目]]></title>
      <url>/2017/09/27/composer%E6%96%B0%E5%BB%BALaravel%E9%A1%B9%E7%9B%AE/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><font color="lightblue"><strong>composer命令来新建Laravel项目</strong></font>

<a id="more"></a>
<pre><code>1.进入到本地服务器目录下
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd d:\phpstudy\www</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/latale/photos/master/cd%E5%88%B0%E7%9B%AE%E5%BD%95.png" alt=""></p>
<pre><code>2.使用composer命令新建项目
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">composer create-project laravel/laravel myLaravel --prefer -dist</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/latale/photos/master/composer%E6%8C%87%E4%BB%A4.png" alt=""></p>
<font color="lightblue"><strong>.env文件(可以在不同环境有不同的值)</strong></font>

<pre><code>3.打开.env文件,修改mysql配置
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">DB_CONNECTION=mysql</span><br><span class="line">DB_HOST=127.0.0.1</span><br><span class="line">DB_PORT=3306</span><br><span class="line">DB_DATABASE=test  //改成你自己数据库的名字</span><br><span class="line">DB_USERNAME=root  //改成你自己数据库的登录名</span><br><span class="line">DB_PASSWORD=root //改成你自己数据库的密码</span><br></pre></td></tr></table></figure>
<pre><code>PS:假如你要改默认的mysql配置 app/config/database.php
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&apos;mysql&apos; =&gt; [</span><br><span class="line">    &apos;driver&apos; =&gt; &apos;mysql&apos;,</span><br><span class="line">    &apos;host&apos; =&gt; env(&apos;DB_HOST&apos;, &apos;127.0.0.1&apos;),</span><br><span class="line">    &apos;port&apos; =&gt; env(&apos;DB_PORT&apos;, &apos;3306&apos;),</span><br><span class="line">    &apos;database&apos; =&gt; env(&apos;DB_DATABASE&apos;, &apos;forge&apos;),</span><br><span class="line">    &apos;username&apos; =&gt; env(&apos;DB_USERNAME&apos;, &apos;forge&apos;),</span><br><span class="line">    &apos;password&apos; =&gt; env(&apos;DB_PASSWORD&apos;, &apos;&apos;),</span><br><span class="line">    &apos;unix_socket&apos; =&gt; env(&apos;DB_SOCKET&apos;, &apos;&apos;),</span><br><span class="line">    &apos;charset&apos; =&gt; &apos;utf8mb4&apos;,</span><br><span class="line">    &apos;collation&apos; =&gt; &apos;utf8mb4_unicode_ci&apos;,</span><br><span class="line">    &apos;prefix&apos; =&gt; &apos;&apos;,</span><br><span class="line">    &apos;strict&apos; =&gt; true,</span><br><span class="line">    &apos;engine&apos; =&gt; null,</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
<pre><code>4.env文件修改项目应用的APP_KEY(当克隆项目的时候需要更改)
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">php artisan key:generate</span><br><span class="line">APP_KEY=base64:wl+WQulEqHPFeORscRIE4apjVLZUN6MhSjjODByvLDw=</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/latale/photos/master/app_key.png" alt=""></p>
<pre><code>5.npm install命令下载package.json的依赖模块
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install</span><br></pre></td></tr></table></figure>
<pre><code>6.执行脚本
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm run production</span><br></pre></td></tr></table></figure>
<pre><code>7.打开浏览器输入localhost
</code></pre><p><img src="https://raw.githubusercontent.com/latale/photos/master/laravel%E7%AE%80%E4%BB%8B%E5%9B%BE.png" alt=""></p>
<p>ok!</p>
<p><strong>一些配置问题</strong></p>
<pre><code>composer配置国内镜像(解决下载模块慢的问题)
composer config -g repo.packagist composer https://packagist.phpcomposer.com
composer update(一般下载来的项目进行模块的匹配下载)
有时候遇到类似于下载错误什么php.ini没有找到什么的，可能是fileinfo.ini模块没有开启。
composer install(项目依赖模块的下载)
npm install(一些前端依赖模块的下载)
chmod 777 项目路径(mac下，可能打开网页空白，可能是文件权限不够)
</code></pre>]]></content>
      
        
        <tags>
            
            <tag> laravel </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[chrome调试手机端adb插件]]></title>
      <url>/2017/09/20/chromeADB%E8%B0%83%E8%AF%95/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><strong>chrome调试手机端adb插件</strong></p>
<p>chrome调试手机端adb插件~</p>
<a id="more"></a>
<p>有时候我们调试手机端的时候，会出现BUG但是不知道错误在哪里，这时候需要调试，这就用到了chrome的一个adb调试插件。</p>
<p>latern(蓝灯) -&gt; <a href="https://github.com/getlantern/lantern" target="_blank" rel="noopener">蓝灯下载地址</a>(下载对应版本的即可)</p>
<p>  首先我们去安装这个插件<a href="https://chrome.google.com/webstore/detail/adb/dpngiggdglpdnjdoaefidgiigpemgage?hl=zh-CN" target="_blank" rel="noopener">adb插件</a>(需翻墙 ↑↑↑↑ 安装蓝灯即可)</p>
<p><img src="https://raw.githubusercontent.com/latale/photos/master/adb.png" alt=""></p>
<p>插件安装好后,点击如图所示:</p>
<p>点击 View Inspection Targets</p>
<p><img src="https://raw.githubusercontent.com/latale/photos/master/adbsetting.png" alt=""></p>
<p>进去后，用USB连接手机-&gt;打开设置-&gt;开发者设置-&gt;USB调试-&gt;允许这台电脑调试-&gt;然后打开手机上的chrome浏览器…</p>
<p>如图所示:</p>
<p><img src="https://raw.githubusercontent.com/latale/photos/master/adbcontent.png" alt=""></p>
<p>然后点击inspect即可开始调试</p>
<p><img src="https://raw.githubusercontent.com/latale/photos/master/chromeconsole.png" alt=""></p>
]]></content>
      
        
        <tags>
            
            <tag> 瞎扯淡 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[node爬虫简书文章~]]></title>
      <url>/2017/09/18/node%E7%88%AC%E8%99%AB/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>node爬虫简书文章~</p>
<p>node爬虫简书文章,用的是Sequelize存到数据库里</p>
<a id="more"></a>
<hr>
<p><strong>先建一个database,命名为’jianshu’</strong></p>
<p><img src="https://raw.githubusercontent.com/latale/photos/master/create.png" alt=""></p>
<hr>
<p> <strong>建完后大概就是这样的结构</strong></p>
<p> <img src="https://raw.githubusercontent.com/latale/photos/master/showDatabase.png" alt=""></p>
<hr>
<pre><code>config.js
</code></pre><hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">const config = &#123;</span><br><span class="line">    database: &apos;jianshu&apos;,</span><br><span class="line">    username:&apos;root&apos;,</span><br><span class="line">    password: &apos;root&apos;, </span><br><span class="line">    host: &apos;localhost&apos;, </span><br><span class="line">    port: 3306 </span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">module.exports = config;</span><br></pre></td></tr></table></figure>
<hr>
<pre><code>model.js
</code></pre><hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">const config = require(&apos;./config&apos;);</span><br><span class="line">const Sequelize = require(&apos;Sequelize&apos;);</span><br><span class="line">const sequelize = new Sequelize(config.database, config.username, config.password, &#123;</span><br><span class="line">  host: config.host,</span><br><span class="line">  dialect: &apos;mysql&apos;,</span><br><span class="line">  pool: &#123;</span><br><span class="line">    max: 5,</span><br><span class="line">    min: 0,</span><br><span class="line">    idle: 30000</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">let Content = sequelize.define(&apos;Content&apos;, &#123;</span><br><span class="line">  id: &#123;</span><br><span class="line">    type: Sequelize.INTEGER,</span><br><span class="line">    primaryKey: true,</span><br><span class="line">    autoIncrement: true,    </span><br><span class="line">  &#125;,</span><br><span class="line">  author: Sequelize.STRING(255),</span><br><span class="line">  title: Sequelize.STRING(255),</span><br><span class="line">  summary: Sequelize.TEXT,</span><br><span class="line">  wachedCount: &#123;</span><br><span class="line">    type:Sequelize.BIGINT,</span><br><span class="line">    defaultValue:0</span><br><span class="line">  &#125;,</span><br><span class="line">  content: Sequelize.TEXT,</span><br><span class="line">  realContentHref: Sequelize.STRING(100),</span><br><span class="line">  shareTime: Sequelize.STRING(50),</span><br><span class="line">  createdTime: Sequelize.BIGINT,</span><br><span class="line">  updatedTime: Sequelize.BIGINT</span><br><span class="line">&#125;, &#123;</span><br><span class="line">    timestamps: false</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">module.exports = Content;</span><br></pre></td></tr></table></figure>
<hr>
<pre><code>jianshu.js
</code></pre><hr>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line">const superagent = require(&apos;superagent&apos;);</span><br><span class="line">const cheerio = require(&apos;cheerio&apos;);</span><br><span class="line">const fs = require(&apos;fs&apos;);</span><br><span class="line">const path = require(&apos;path&apos;);</span><br><span class="line">const request = require(&apos;request&apos;);</span><br><span class="line">const async = require(&apos;async&apos;);</span><br><span class="line">const ContentModel = require(&apos;./model&apos;); //引入数据库模型</span><br><span class="line">let jianshuUrl = &apos;http://www.jianshu.com&apos;;</span><br><span class="line">let specialUrl = &apos;http://www.jianshu.com/recommendations/collections?utm_medium=index-collections&amp;utm_source=desktop&apos;;</span><br><span class="line">//替换url</span><br><span class="line">let replaceSpecialUrl = (str) =&gt; &#123;</span><br><span class="line">  return `$&#123;jianshuUrl&#125;$&#123;str&#125;`</span><br><span class="line">&#125;;</span><br><span class="line">//替换str</span><br><span class="line">let replaceStr = (str) =&gt; &#123;</span><br><span class="line">  return str.replace(/(^\s+)|(\s+$)/g, &apos;&apos;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//获取专题简书专题</span><br><span class="line">let getSpecialJson = async () =&gt; &#123;</span><br><span class="line">  console.log(&apos;&lt;---------- 获取简书的专题开始 --------&gt;&apos;);</span><br><span class="line">  let specialJson = [];</span><br><span class="line">  return new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line">    superagent.get(specialUrl).end((err, res) =&gt; &#123;</span><br><span class="line">      if (err) console.log(err);</span><br><span class="line">      let $ = cheerio.load(res.text);</span><br><span class="line">      let collectionWrap = $(&apos;#list-container .collection-wrap&apos;);</span><br><span class="line">      collectionWrap.each((i, e) =&gt; &#123;</span><br><span class="line">        let specialAvatar = replaceSpecialUrl($(e).find(&apos;a:first-child img&apos;).attr(&apos;src&apos;));</span><br><span class="line">        let specialHref = replaceSpecialUrl($(e).find(&apos;a:first-child&apos;).attr(&apos;href&apos;));</span><br><span class="line">        let specialName = $(e).find(&apos;a:first-child .name&apos;).text();</span><br><span class="line">        specialJson.push(&#123;</span><br><span class="line">          specialAvatar: specialAvatar,</span><br><span class="line">          specialHref: specialHref,</span><br><span class="line">          specialName: specialName</span><br><span class="line">        &#125;);</span><br><span class="line">        console.log(`正在获取专题名字:$&#123;specialName&#125;`)</span><br><span class="line">      &#125;)</span><br><span class="line">      resolve(specialJson);</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br><span class="line">//获取文章的概要集合</span><br><span class="line">let getSpecialSummaryJson = async () =&gt; &#123;</span><br><span class="line">  console.log(&apos;&lt;---------- 获取专题数据开始 --------&gt;&apos;);</span><br><span class="line">  let specialJson = await getSpecialJson();</span><br><span class="line">  let result = [];</span><br><span class="line">  let concurrencyCount = 0;</span><br><span class="line">  let getCount = 0;</span><br><span class="line">  return new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line">    let queue = async.queue((specialJson, callback) =&gt; &#123;</span><br><span class="line">      let delay = parseInt((Math.random() * 30000000) % 1000, 10);</span><br><span class="line">      concurrencyCount++;</span><br><span class="line">      superagent.get(specialJson.specialHref).end((err, res) =&gt; &#123;</span><br><span class="line">        if (err) &#123;</span><br><span class="line">          console.log(err);</span><br><span class="line">          callback(null);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          let $ = cheerio.load(res.text);</span><br><span class="line">          let dataList = $(&apos;.note-list li&apos;);</span><br><span class="line">          concurrencyCount--</span><br><span class="line">          dataList.each((i, e) =&gt; &#123;</span><br><span class="line">            let avatar = $(e).find(&apos;.content .avatar img&apos;).attr(&apos;src&apos;);</span><br><span class="line">            let author = replaceStr($(e).find(&apos;.content .name&apos;).text());</span><br><span class="line">            let title = $(e).find(&apos;.content .title&apos;).text();</span><br><span class="line">            let summary = replaceStr($(e).find(&apos;.content .abstract&apos;).text());</span><br><span class="line">            let realContentHref = replaceSpecialUrl($(e).find(&apos;.content .title&apos;).attr(&apos;href&apos;));</span><br><span class="line">            let shareTime = $(e).find(&apos;.content .time&apos;).attr(&apos;data-shared-at&apos;);</span><br><span class="line">            let watchedCount = replaceStr($(e).find(&apos;.content .meta a:first-child&apos;).text());</span><br><span class="line">            let pushData = &#123;</span><br><span class="line">              author: author,</span><br><span class="line">              avatar: `http:$&#123;avatar&#125;`,</span><br><span class="line">              title: title,</span><br><span class="line">              summary: summary,</span><br><span class="line">              realContentHref: realContentHref,</span><br><span class="line">              shareTime: shareTime,</span><br><span class="line">              watchedCount: watchedCount</span><br><span class="line">            &#125;;</span><br><span class="line">            // console.log(pushData.realContentHref,pushData.watchedCount)</span><br><span class="line">            console.log(`正在获取的是:$&#123;title&#125; 并发数:$&#123;concurrencyCount&#125; 延迟:$&#123;delay&#125;毫秒`);</span><br><span class="line">            getCount++;</span><br><span class="line">            result.push(pushData)</span><br><span class="line">          &#125;)</span><br><span class="line">          callback(null)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;, 1)</span><br><span class="line">    queue.drain = function () &#123;</span><br><span class="line">      // console.log(result);</span><br><span class="line">      resolve(result)</span><br><span class="line">    &#125;</span><br><span class="line">    queue.push(specialJson)</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;;</span><br><span class="line">//获取文章的正文集合</span><br><span class="line">let getRealContentJson = async () =&gt; &#123;</span><br><span class="line">  let specialSummaryJson = await getSpecialSummaryJson();</span><br><span class="line">  let concurrencyCount = 0;</span><br><span class="line">  let writeCount = 0;</span><br><span class="line">  let realContentJson = [];</span><br><span class="line">  return new Promise((resolve, reject) =&gt; &#123;</span><br><span class="line">    let queue = async.queue((specialSummaryJson, callback) =&gt; &#123;</span><br><span class="line">      let delay = parseInt((Math.random() * 30000000) % 1000, 10);</span><br><span class="line">      concurrencyCount++;</span><br><span class="line">      superagent.get(specialSummaryJson.realContentHref).end((err, res) =&gt; &#123;</span><br><span class="line">        if (err) &#123;</span><br><span class="line">          console.log(err);</span><br><span class="line">          callback(null);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">          let $ = cheerio.load(res.text);</span><br><span class="line">          let content = &apos;&apos;;</span><br><span class="line">          let essay = $(&apos;.show-content&gt;p&apos;).each((i, e) =&gt; &#123;</span><br><span class="line">            content += $(e).text();</span><br><span class="line">          &#125;)</span><br><span class="line">          realContentJson.push(&#123;</span><br><span class="line">            content: content,</span><br><span class="line">            author: specialSummaryJson.author,</span><br><span class="line">            summary: specialSummaryJson.summary,</span><br><span class="line">            avatar: specialSummaryJson.avatar,</span><br><span class="line">            watchedCount: specialSummaryJson.watchedCount,</span><br><span class="line">            realContentHref:specialSummaryJson.realContentHref,</span><br><span class="line">            shareTime: specialSummaryJson.shareTime,</span><br><span class="line">            summary:specialSummaryJson.summary,</span><br><span class="line">            title:specialSummaryJson.title</span><br><span class="line">          &#125;)</span><br><span class="line">          // console.log(specialSummaryJson.watchedCount,specialSummaryJson.realContentHref)</span><br><span class="line">          callback(null)</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;)</span><br><span class="line">    &#125;, 1)</span><br><span class="line">    queue.drain = () =&gt; &#123;</span><br><span class="line">      console.log(&apos;&lt;---------------获取正文数据完成---------------&gt;&apos;)</span><br><span class="line">      resolve(realContentJson);</span><br><span class="line">    &#125;;</span><br><span class="line">    queue.push(specialSummaryJson);</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">let writeRealContent = async () =&gt; &#123;</span><br><span class="line">  let realContentJson = await getRealContentJson();</span><br><span class="line">  let concurrencyCount = 0;</span><br><span class="line">  let queue = async.queue((realContentJson, callback) =&gt; &#123;</span><br><span class="line">    let delay = parseInt((Math.random() * 30000000) % 1000, 10);</span><br><span class="line">    concurrencyCount++;</span><br><span class="line">    let DateNow = Date.now();</span><br><span class="line">    ContentModel.create(&#123;</span><br><span class="line">      author: realContentJson.author,</span><br><span class="line">      avatar: realContentJson.avatar,</span><br><span class="line">      title: realContentJson.title,</span><br><span class="line">      summary:realContentJson.summary,</span><br><span class="line">      content: realContentJson.content,</span><br><span class="line">      watchedCount: realContentJson.watchedCount,</span><br><span class="line">      shareTime: realContentJson.shareTime,</span><br><span class="line">      realContentHref: realContentJson.realContentHref,</span><br><span class="line">      createdTime: DateNow,</span><br><span class="line">      updatedTime: DateNow,</span><br><span class="line">    &#125;).then(function (result) &#123;</span><br><span class="line">      console.log(`写入标题为$&#123;result.title&#125;的文章成功!`);</span><br><span class="line">    &#125;).catch(function (err) &#123;</span><br><span class="line">      console.log(&apos;failed: &apos; + err);</span><br><span class="line">    &#125;);</span><br><span class="line">    setTimeout(() =&gt; &#123;</span><br><span class="line">      concurrencyCount--;</span><br><span class="line">      callback(null);</span><br><span class="line">    &#125;, delay)</span><br><span class="line">  &#125;, 1);</span><br><span class="line">  //任务队列执行完成的回调</span><br><span class="line">  queue.drain = () =&gt; &#123;</span><br><span class="line">    console.log(&apos;全部写入完成&apos;);</span><br><span class="line">  &#125;</span><br><span class="line">  //加入任务队列</span><br><span class="line">  queue.push(realContentJson);</span><br><span class="line">&#125;</span><br><span class="line">writeRealContent();</span><br></pre></td></tr></table></figure>
<p> <strong>然后我们在命令行输入node jianshu开始爬虫</strong></p>
<p> <img src="https://github.com/latale/photos/blob/master/pachong.gif?raw=true" alt=""></p>
<p><strong>最后看一下数据库有没有写入成功</strong><br><img src="https://raw.githubusercontent.com/latale/photos/master/select.png" alt=""></p>
]]></content>
      
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> node </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Node的cluster模块详解]]></title>
      <url>/2017/09/04/cluster%E6%A8%A1%E5%9D%97/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>cluster是node的内置模块，用来nodeJs多核多进程处理。</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">const cluster = require(&apos;cluster&apos;); //多核处理模块</span><br><span class="line">const os = require(&apos;os&apos;); //系统模块</span><br><span class="line">const http = require(&apos;http&apos;); 自建服务器模块</span><br><span class="line"></span><br><span class="line">const cpuLen = os.cpus().length;</span><br><span class="line"></span><br><span class="line">if(cluster.isMaster) &#123;  //是否是主进程(master)</span><br><span class="line">  Object.keys(cpuLen).forEach(() =&gt; &#123;</span><br><span class="line">    const worker = cluster.fork(); //创建子进程</span><br><span class="line">    worker.send(&apos;i am worker&apos; + worker.id) //向子进程发送消息(由主控来调用)</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  cluster.on(&apos;listening&apos;,(worker,address) =&gt; &#123;</span><br><span class="line">    console.log(&apos;监听子进程向主控的状态改变: &apos; + worker.id + address.id);</span><br><span class="line">  &#125;)；</span><br><span class="line">  cluster.on(&apos;online&apos;,(worker) =&gt; &#123;</span><br><span class="line">    console.log(&apos;监听子进程创建成功,id: &apos; + worker.id);</span><br><span class="line">  &#125;);</span><br><span class="line">  cluster.on(&apos;disconnect&apos;,(worker) =&gt; &#123;</span><br><span class="line">    console.log(&apos;监听子进程断线事件,id: &apos; + worker.id);</span><br><span class="line">  &#125;);</span><br><span class="line">  cluster.on(&apos;exit&apos;,(worker) =&gt; &#123;</span><br><span class="line">    console.log(&apos;监听子进程离开事件,id: &apos; + worker.id);</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">&#125; else if(cluster.isWorker) &#123; //是否是子进程(worker)</span><br><span class="line">  process.on(&apos;message&apos;,(msg) =&gt; &#123;</span><br><span class="line">    console.log(&apos;master传来的消息: &apos; + msg);   //监听主控发来的消息</span><br><span class="line">    process.send(&apos;hello i am worker&apos; + cluster.worker.id);</span><br><span class="line">  &#125;);</span><br><span class="line">  http.createServer((req,res) =&gt; &#123;</span><br><span class="line">    res.writeHead(200,&#123;&apos;Content-type&apos;,&apos;text/html&apos;&#125;);</span><br><span class="line">    res.end(&apos;worker.id: &apos; + cluster.worker.id + &apos;worker.pid:&apos; + process.pid);</span><br><span class="line">  &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> nodeJs </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[vue+axios+node+express简易网易云音乐]]></title>
      <url>/2017/08/02/%E7%BD%91%E6%98%93%E4%BA%91%E9%9F%B3%E4%B9%90/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>用vue+axios+node+express做的简易版网易云音乐,很多还没处理……………..<br><a id="more"></a></p>
<p><img src="https://github.com/latale/photos/blob/master/music.gif?raw=true" alt=""></p>
<pre><code>初始版本- -
</code></pre>]]></content>
      
        
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[奶茶品鉴大湿~]]></title>
      <url>/2017/07/23/%E5%A5%B6%E8%8C%B6%E7%9A%84%E5%91%B3%E9%81%93/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>喝遍全中国的奶茶……..这是我的目标…………<br><a id="more"></a></p>
<pre><code>1.一点点，奶味较重，红豆奶茶适合7分甜，本身红豆是很甜，如果正常甜，我这么能吃甜的也觉得太甜..............
</code></pre><p>  <img src="https://raw.githubusercontent.com/latale/photos/master/yidiandiantea.jpg" alt=""></p>
<pre><code>2.一鸣的招牌奶茶，综合感觉不错，焦糖味十足.............
</code></pre><p><img src="https://raw.githubusercontent.com/latale/photos/master/yimingtea.jpg" alt=""></p>
<pre><code>3.品圣喜茶，茶味适中，奶味偏淡....
</code></pre><p><img src="https://raw.githubusercontent.com/latale/photos/master/pinshengxicha.jpg" alt=""></p>
<font color="red">未完待续……….</font>]]></content>
      
        
        <tags>
            
            <tag> 瞎扯淡 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[协议]]></title>
      <url>/2017/07/13/https%E5%8D%8F%E8%AE%AE/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>https协议引用资源的问题</p>
<p>https协议下引用http资源时，报NET::ERR_INSECURE_RESPONSE错误</p>
<a id="more"></a>
<p>  https就是在http的情况下加了一层ssl认证，然而浏览器默认情况下是不允许https协议下的网站去引用http的资源，认为这是不安全的，用户需要点击允许继续访问，用户体验非常差。</p>
<p>  解决方案：</p>
<p>  1.我要在https的博客下放入http的网易云音乐，我们可以用iframe来解决，可以先在http下进行播放，然后使用iframe引入这个资源，再把它镶嵌到https下的网页即可。</p>
<p>  2.引用资源的地址去掉url的协议前缀，就是相对路径，例如//music.163.com，那么浏览器就会自动识别当前是https还是http，就会在前面加上对应的url协议。</p>
]]></content>
      
        
        <tags>
            
            <tag> https </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Laravel Blade模板引擎]]></title>
      <url>/2017/07/11/blade/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><font color="lightblue"><strong>Laravel Blade模板引擎</strong></font>

<p>Blade 是 Laravel 提供的一个既简单又强大的模板引擎。和其他流行的 PHP 模板引擎不一样，Blade 并不限制你在视图中使用原生 PHP 代码。所有 Blade 视图文件都将被编译成原生的 PHP 代码并缓存起来，除非它被修改，否则不会重新编译，这就意味着 Blade 基本上不会给你的应用增加任何额外负担。Blade 视图文件使用 .blade.php 扩展名，一般被存放在 resources/views 目录。</p>
<a id="more"></a>
<p><strong>模板继承</strong></p>
<p>  定义页面布局<br>  Blade两大优点就是模板继承和区块。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- 文件保存于 resources/views/layouts/app.blade.php --&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">    &lt;head&gt;</span><br><span class="line">        &lt;title&gt;应用程序名称 - @yield(&apos;title&apos;)&lt;/title&gt;</span><br><span class="line">    &lt;/head&gt;</span><br><span class="line">    &lt;body&gt;</span><br><span class="line">        @section(&apos;sidebar&apos;)</span><br><span class="line">            这是 master 的侧边栏。</span><br><span class="line">        @show</span><br><span class="line"></span><br><span class="line">        &lt;div class=&quot;container&quot;&gt;</span><br><span class="line">            @yield(&apos;content&apos;)</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>blade模板的文件必须以.blade.php为结尾。<br>如上所示，这是HTML语法，里面包括了@section和@yield命令，@section的语义就是这是定义了一个视图区域，而@yield命令是指用来显示指令内容的。</p>
<p>接下来我们写一个继承布局页面</p>
<p><strong>继承页面布局</strong><br>当定义子页面的时候，我们可以用Blade模板的extends指令来继承页面，这时候我们就可以用@section指令来注入继承页面的@section区域内容，而@yeild指令则用来注入继承页面指定的@yeild的区域。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- Stored in resources/views/child.blade.php --&gt;</span><br><span class="line"></span><br><span class="line">@extends(&apos;layouts.app&apos;)</span><br><span class="line"></span><br><span class="line">@section(&apos;title&apos;, &apos;Page Title&apos;)</span><br><span class="line"></span><br><span class="line">@section(&apos;sidebar&apos;)</span><br><span class="line">    @@parent</span><br><span class="line"></span><br><span class="line">    &lt;p&gt;This is appended to the master sidebar.&lt;/p&gt;</span><br><span class="line">@endsection</span><br><span class="line"></span><br><span class="line">@section(&apos;content&apos;)</span><br><span class="line">    &lt;p&gt;This is my body content.&lt;/p&gt;</span><br><span class="line">@endsection</span><br></pre></td></tr></table></figure>
<p>如上所示，siderbar区块中的@@parent指令会追加继承页面原有的内容，如果不使用就会覆盖该布局中的内容。</p>
]]></content>
      
        
        <tags>
            
            <tag> laravel </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[雨]]></title>
      <url>/2017/07/11/%E9%9B%A8/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script>  <font color="lightblue"><br>    <strong>宁波的7月</strong><br>  </font><br><font color="red"><br>  啊啊啊啊啊，每次上班了开始下雨了，每次下班了也开始下雨了，我能怎么办啊，我也很绝望啊！！！！！！！！！！<br></font>

<a id="more"></a>
<p>你下也就算了，我还有点准备，可有时候吧↓↓↓↓↓↓↓</p>
<p><img src="https://raw.githubusercontent.com/latale/photos/master/IMG20170710175439.jpg" alt=""></p>
<p>那天我去公交车站的时候，我看这天气这么恐怖，打着闷雷，肯定要下雨了，于是我开启疾跑，冲到了公交车站，看着天啥时下雨？？？？？</p>
<p>我盼啊盼啊，最后都到家了，还不下，excuse me？ 后知后觉中我感觉我    <font color="red">被耍了！</font></p>
<p><img src="https://raw.githubusercontent.com/latale/photos/master/black.jpeg" alt=""></p>
]]></content>
      
        
        <tags>
            
            <tag> 瞎扯淡 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[面向对象轮播图]]></title>
      <url>/2017/07/10/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BD%AE%E6%92%AD%E5%9B%BE/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><font color="lightblue"><strong>面向对象的轮播图</strong></font>

<p>用的是JQ,大概就是先生成dom,然后绑定事件,然后init~</p>
<a id="more"></a>
<p><img src="https://github.com/latale/photos/blob/master/GIF1.gif?raw=true" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;面向对象轮播图&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        * &#123;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            padding: 0;</span><br><span class="line">            list-style: none;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #container &#123;</span><br><span class="line">            width: 1200px;</span><br><span class="line">            height: 600px;</span><br><span class="line">            margin: 0 auto;</span><br><span class="line">            overflow: hidden;</span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .uls &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">            left: 0;</span><br><span class="line">            top: 0;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .uls li &#123;</span><br><span class="line">            width: 1200px;</span><br><span class="line">            height: 600px;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .yuan &#123;</span><br><span class="line">            position: absolute;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .circleUL &#123;</span><br><span class="line">            transform: translate(-50%, 0);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .circle &#123;</span><br><span class="line">            width: 30px;</span><br><span class="line">            height: 30px;</span><br><span class="line">            background: rgba(0, 0, 0, 0.8);</span><br><span class="line">            border-radius: 15px;</span><br><span class="line">            margin-left: 10px;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        .cur &#123;</span><br><span class="line">            background: rgba(155, 200, 3, 5);</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;div id=&quot;container&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script src=&quot;jquery-3.1.1.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">    function Picrun(options) &#123;</span><br><span class="line">        this.images = options.images || [];</span><br><span class="line">        this.width = options.width || 1200;</span><br><span class="line">        this.height = options.height || 600;</span><br><span class="line">        this.index = 0;</span><br><span class="line">        this.timer = null;</span><br><span class="line">    &#125;;</span><br><span class="line">    Picrun.prototype = &#123;</span><br><span class="line">        init: function () &#123;</span><br><span class="line">            this.bindDOM();</span><br><span class="line">            this.bindEvent();</span><br><span class="line">            this.bindRUN();</span><br><span class="line">        &#125;,</span><br><span class="line">        bindDOM() &#123;</span><br><span class="line">            const that = this;</span><br><span class="line">            this.OUL = $(&apos;&lt;ul&gt;&lt;/ul&gt;&apos;);</span><br><span class="line">            this.OUL.addClass(&apos;uls&apos;);</span><br><span class="line">            this.circleOUL = $(&apos;&lt;ul&gt;&lt;/ul&gt;&apos;);</span><br><span class="line">            this.circleOUL.addClass(&apos;circleUL&apos;);</span><br><span class="line">            this.circleOUL.css(&#123;</span><br><span class="line">                &apos;left&apos;: that.width / 2,</span><br><span class="line">                &apos;bottom&apos;: &apos;20px&apos;,</span><br><span class="line">                &apos;position&apos;: &apos;absolute&apos;,</span><br><span class="line">                &apos;translate&apos;: &apos;(-50%,-50%)&apos;</span><br><span class="line">            &#125;);</span><br><span class="line">            this.OUL.width((this.images.length + 1) * 100 + &apos;%&apos;);</span><br><span class="line">            for (let i = 0; i &lt; this.images.length; i++) &#123;</span><br><span class="line">                let OLI = $(&apos;&lt;li&gt;&lt;img src=&quot;&apos; + this.images[i] + &apos;&quot; alt=&quot;&quot;&gt;&lt;/li&gt;&apos;);</span><br><span class="line">                this.circle = $(&apos;&lt;li&gt;&lt;/li&gt;&apos;);</span><br><span class="line">                this.circle.addClass(&apos;circle&apos;);</span><br><span class="line">                this.circleOUL.append(this.circle);</span><br><span class="line">                this.OUL.append(OLI);</span><br><span class="line">            &#125;</span><br><span class="line">            this.OUL.append(this.OUL.children(0).eq(0).clone());</span><br><span class="line">            this.circleOUL.css(&#123;</span><br><span class="line">                &apos;marginLeft&apos;: -(this.circleOUL.width / 2)</span><br><span class="line">            &#125;);</span><br><span class="line">            this.circleOUL.children().eq(0).addClass(&apos;cur&apos;).siblings().removeClass(&apos;cur&apos;);</span><br><span class="line">            $(&apos;#container&apos;).append(this.OUL);</span><br><span class="line">            $(&apos;#container&apos;).append(this.circleOUL);</span><br><span class="line">        &#125;,</span><br><span class="line">        bindEvent() &#123;</span><br><span class="line">            const that = this;</span><br><span class="line">            this.circleOUL.children().each(function (index) &#123;</span><br><span class="line">                $(this).click(() =&gt; &#123;</span><br><span class="line">                    that.bindPause();</span><br><span class="line">                    $(this).addClass(&apos;cur&apos;).siblings().removeClass(&apos;cur&apos;);</span><br><span class="line">                    if (that.index == 5 &amp;&amp; $(this).index() == 1) &#123;</span><br><span class="line">                        that.OUL.css(&#123;</span><br><span class="line">                            &apos;left&apos;: 0</span><br><span class="line">                        &#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                    that.OUL.stop().animate(&#123;</span><br><span class="line">                        &apos;left&apos;: -index * that.width</span><br><span class="line">                    &#125;);</span><br><span class="line">                    that.bindRUN($(this).index());</span><br><span class="line">                &#125;)</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;,</span><br><span class="line">        bindRUN(indx) &#123;</span><br><span class="line">            this.index = indx != undefined ? indx : this.index;</span><br><span class="line">            this.timer = setInterval(() =&gt; &#123;</span><br><span class="line">                this.index++;</span><br><span class="line">                if (this.index &gt; 5) &#123;</span><br><span class="line">                    this.index = 1;</span><br><span class="line">                    this.OUL.css(&#123;</span><br><span class="line">                        &apos;left&apos;: 0</span><br><span class="line">                    &#125;);</span><br><span class="line">                &#125;</span><br><span class="line">                this.circleOUL.children().eq(this.index % 5).addClass(&apos;cur&apos;).siblings().removeClass(&apos;cur&apos;);</span><br><span class="line">                this.OUL.stop().animate(&#123;</span><br><span class="line">                    &apos;left&apos;: -this.width * this.index</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;, 1000);</span><br><span class="line"></span><br><span class="line">        &#125;,</span><br><span class="line">        bindPause() &#123;</span><br><span class="line">            clearInterval(this.timer);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    var pic = new Picrun(&#123;</span><br><span class="line">        images: [&apos;11.JPG&apos;, &apos;12.JPG&apos;, &apos;13.JPG&apos;, &apos;14.jpg&apos;, &apos;15.jpg&apos;]</span><br><span class="line">    &#125;);</span><br><span class="line">    pic.init();</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>
<p>—-end—-</p>
<p><font color="yellow"><strong>have a good trip!</strong></font> <img src="https://raw.githubusercontent.com/latale/photos/master/jmg.jpg" alt=""></p>
]]></content>
      
        
        <tags>
            
            <tag> 瞎扯淡 </tag>
            
            <tag> javascript </tag>
            
            <tag> skills </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[电音]]></title>
      <url>/2017/07/09/xumengyuan/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><font color="lightblue">电音大神徐梦圆</font><br>徐梦圆大神的电音~~~</p>
<a id="more"></a>
<p><font color="lightblue" size="5rem"><strong>U AND ME</strong></font></p>
<iframe src="//www.bilibili.com/blackboard/player.html?aid=10472232&cid=17293987&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="100%" height="200rem"></iframe>


<hr>
<p><font color="lightblue" size="5rem"><strong>【徐梦圆】China-X(Extended Mix)【现场版】</strong></font></p>
<iframe src="//www.bilibili.com/blackboard/player.html?aid=10568437&cid=17446825&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" width="100%" height="200rem"></iframe>
]]></content>
      
        
        <tags>
            
            <tag> 瞎扯淡 </tag>
            
            <tag> 音乐 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[mongoDB使用笔记]]></title>
      <url>/2017/07/09/mongo%E5%91%BD%E4%BB%A4%E6%93%8D%E4%BD%9C/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><font color="red">mongoDB使用笔记</font>

<p>一些常用的mongoDB命令操作。<br><a id="more"></a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><span class="line">mongo 使用数据库</span><br><span class="line"></span><br><span class="line">mongod 开机</span><br><span class="line"></span><br><span class="line">mongoimport 导入数据</span><br><span class="line"></span><br><span class="line">**开启mongo服务**</span><br><span class="line"></span><br><span class="line">	mongod --dbpath e:\mongoDB (路径)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">**连接mongo**</span><br><span class="line"></span><br><span class="line">	mongo</span><br><span class="line"></span><br><span class="line">**创建数据库**</span><br><span class="line"></span><br><span class="line">	use july</span><br><span class="line"></span><br><span class="line">**查看数据库**</span><br><span class="line"></span><br><span class="line">	db</span><br><span class="line"></span><br><span class="line">开机命令:</span><br><span class="line"></span><br><span class="line">	mongod --dbpath E:\mongo (数据库存储位置,对应一个个数据库文件)</span><br><span class="line"></span><br><span class="line">1.列出所有数据库</span><br><span class="line"></span><br><span class="line">	show dbs</span><br><span class="line"></span><br><span class="line">2.使用某个数据库</span><br><span class="line">	</span><br><span class="line">	use 数据库名字(blog)</span><br><span class="line">	假如我们想新建一个数据库,也是用use命令,如果use后面的几个名字不存在的话,就代表新建这个名字的数据库.</span><br><span class="line"></span><br><span class="line">3.查看当前所在的数据库</span><br><span class="line"></span><br><span class="line">	db(命令行就会显示当前的数据库)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">4.插入数据</span><br><span class="line"></span><br><span class="line">	db.users.insert(&#123;&quot;username&quot;:&quot;july&quot;,&quot;password&quot;:&quot;111&quot;&#125;);</span><br><span class="line">	当我们使用insert插入数据时,mongodb如果发现users是个陌生的集合,就会在这个数据库中创建这个集合.</span><br><span class="line"></span><br><span class="line">5.删除数据库</span><br><span class="line"></span><br><span class="line">	db.dropDatabase();</span><br><span class="line">	不可恢复- -</span><br><span class="line">	cls:清屏</span><br><span class="line">	ctrl+c 退出数据库操作</span><br><span class="line"></span><br><span class="line">6.导入数据</span><br><span class="line"></span><br><span class="line">有时候我们不会命令行一条一条的insert数据,那么可以将所有的数据卸载一个文件下,然后可以通过带入的方式把数据库</span><br><span class="line">	</span><br><span class="line">	mongoimport --db blog --collection users --drop --file E:\users.json</span><br><span class="line">	--db 要往哪个数据库导入</span><br><span class="line">	--collection 要添加到哪个集合</span><br><span class="line">	--drop 把集合所有的数据清空</span><br><span class="line">	--file 要导入的文件路径</span><br><span class="line"></span><br><span class="line">7.查找数据</span><br><span class="line">	</span><br><span class="line">	1.全局查找</span><br><span class="line">	db.users.find();</span><br><span class="line">	如果find中不带任何参数,那么就是查询users这个集合下的所有文档</span><br><span class="line">	2.精确查找</span><br><span class="line">	db.users.find(&quot;username&quot;:&quot;july&quot;);</span><br><span class="line">	3.多条件查找</span><br><span class="line">	db.users.find(&quot;username&quot;:&quot;july&quot;,&quot;password&quot;:&quot;111&quot;);</span><br><span class="line">	4.大于条件</span><br><span class="line">	db.users.find(&#123;&quot;password&quot;:$&#123;$gt:50&#125;&#125;);</span><br><span class="line">	5.或者条件</span><br><span class="line">	db.users.find(&#123;$or:[&#123;&quot;username&quot;:&quot;july&quot;,&#123;&quot;password&quot;:&quot;111&quot;&#125;&#125;]&#125;);</span><br><span class="line">	6.排序</span><br><span class="line">	db.users.find().sort(&quot;_id&quot;:-1); //1为升序,-1为降序</span><br><span class="line"></span><br><span class="line">8.修改数据</span><br><span class="line"></span><br><span class="line">	db.users.update(&#123;&quot;username&quot;:&quot;july&quot;,&#123;$set:&#123;&quot;password&quot;:222&#125;&#125;&#125;); </span><br><span class="line">	//默认修改匹配的第一条</span><br><span class="line">	db.users.update(&#123;&quot;username&quot;:&quot;july&quot;,&#123;$set:&#123;&quot;password&quot;:&quot;333&quot;&#125;&#125;,&#123;multi:true&#125;&#125;); </span><br><span class="line">	//这样才是修改匹配的所有条,需要在后面加上&#123;multi:true&#125;</span><br><span class="line">	db.users.update(&quot;username&quot;:&quot;july&quot;,&#123;&quot;username&quot;:&quot;mike&quot;,&quot;password&quot;:&quot;333&quot;&#125;);</span><br><span class="line">	//完全替换,不出现$set关键字</span><br><span class="line">	</span><br><span class="line"></span><br><span class="line">9.删除数据</span><br><span class="line"></span><br><span class="line">	db.users.remove(&quot;username&quot;:&quot;july&quot;);</span><br><span class="line">	//默认删除所有匹配的数据</span><br><span class="line">	db.users.remove(&quot;username&quot;:&quot;july&quot;,&#123;justOne:true&#125;);</span><br><span class="line">	//只删除匹配的第一条</span><br></pre></td></tr></table></figure>
<p><img src="https://raw.githubusercontent.com/latale/photos/master/mongo.png" alt=""></p>
<pre><code>这里推荐可视化工具 ----&gt; moogoose
</code></pre><p><img src="https://raw.githubusercontent.com/latale/photos/master/mongoose.png" alt=""></p>
<p>—–end—–</p>
<p><font color="yellow">have a good trip!</font><img src="https://raw.githubusercontent.com/latale/photos/master/jmg.jpg" alt=""></p>
]]></content>
      
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> mongodb </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[炒鸡好用的翻墙哟]]></title>
      <url>/2017/07/08/vpn/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>自从蓝灯要收费后,我又开始了漫长的寻找翻墙软件的过程~~<br> -&gt; -&gt; 突然有一天,一款叫做ssbetter的进入了我的视线,我岂能放过- -</p>
 <a id="more"></a>
<p> <strong>首先我们打开官网</strong> <a href="http://ssbetter.org/" target="_blank" rel="noopener">http://ssbetter.org/</a></p>
<p> 如图:<br> <img src="https://raw.githubusercontent.com/latale/photos/master/ssbetterLogin.png" alt=""></p>
<p>注册后登录进去的界面就是这样的….</p>
<p><img src="https://raw.githubusercontent.com/latale/photos/master/1.jpg" alt=""></p>
<p>点击左侧的产品订购可以选择月付,年付….咸鱼的我习惯月付….</p>
<p><img src="https://raw.githubusercontent.com/latale/photos/master/2.png" alt=""></p>
<p>点击去后,这里有多种参数,默认就可以了,密码随便写一个,因为后面SSR启动的时候直接二维码扫描就知道把配置数据写入了- -(很哇塞)<br><img src="https://raw.githubusercontent.com/latale/photos/master/3.png" alt=""></p>
<p>…………支付完成后</p>
<p>点击左边的软件下载,这里有各种系统的sr或者ssr翻墙软件,咸鱼是window的ssr,所以下面的都是window的ssr来操作的,大同小异 - -</p>
<p><img src="https://raw.githubusercontent.com/latale/photos/master/4.png" alt=""></p>
<p>一顿操作后,如图打开</p>
<p><img src="https://raw.githubusercontent.com/latale/photos/master/5.png" alt=""></p>
<p>其实不用管这个- -因为直接有二维码扫描可以写入,右键ssr的图标有一个二维码扫描</p>
<p><img src="https://raw.githubusercontent.com/latale/photos/master/6_meitu_2.jpg" alt=""></p>
<p>回到页面中,点击左侧的服务管理,我选择的是新加坡1的,因为是ssr所以选择ssr二维码</p>
<p><img src="https://github.com/latale/photos/blob/master/666.jpg?raw=true" alt=""></p>
<p>点击后会出现一个二维码<br><img src="https://github.com/latale/photos/blob/master/ewm_meitu_3.jpg?raw=true" alt=""></p>
<p>然后右键系统图标选择二维码扫描,就会扫描当前页面中显示的二维码,然后会跳出个配置完成的页面,点确定<br><img src="https://github.com/latale/photos/blob/master/choose.png?raw=true" alt=""></p>
<p>然后如图选择刚添加好的服务器<br><img src="https://github.com/latale/photos/blob/master/777.png?raw=true" alt=""></p>
<p>然后我选择的是PAC代理,就是国外才走代理,或者你想国内国外都走代理,那就选择全局代理~</p>
<p><img src="https://github.com/latale/photos/blob/master/888.png?raw=true" alt=""></p>
<p>然后代理规则就选择绕过大陆和局域网好了</p>
<p><img src="https://github.com/latale/photos/blob/master/999.png?raw=true" alt=""></p>
<p>ok! try to do it~ -&gt; <a href="http://www.google.com" target="_blank" rel="noopener">www.google.com</a></p>
<p><img src="https://raw.githubusercontent.com/latale/photos/master/100.png" alt=""></p>
<p>–end–</p>
<p><font color="yellow"><strong>have a good trip!</strong></font> <img src="https://raw.githubusercontent.com/latale/photos/master/jmg.jpg" alt=""></p>
]]></content>
      
        
        <tags>
            
            <tag> 瞎扯淡 </tag>
            
            <tag> skills </tag>
            
            <tag> 黑科技 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[flex布局]]></title>
      <url>/2017/07/07/flex%E5%B8%83%E5%B1%80/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><strong>flex布局</strong></p>
<p>详解flex布局的各种参数~</p>
<a id="more"></a>
<p>flexible:能够伸缩或者容易变化,以适应外界条件的变化<br>    box:通用的矩形容器<br>    flex:是flexible Box的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。</p>
<pre><code>flex布局是基于flex-flow流布局的,容器默认存在两根轴,水平的为主轴,垂直的为侧轴,主轴开始位置和边框交叉点叫做main start,结束位置叫做main end,侧轴开始位置和边框的交叉点叫做cross start,结束位置叫做cross end,项目默认主轴排列,主轴占据的空间叫做main size,侧轴占据的空间叫做cross size.
</code></pre><p><strong>1.flex-direction属性</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">flex-direction属性决定主轴的方向(项目的排列方向)</span><br><span class="line"></span><br><span class="line">flex-direction:row;</span><br><span class="line">row为默认值:主轴为水平方向,起点在左端</span><br><span class="line"></span><br><span class="line">flex-direction:row-reverse;</span><br><span class="line">row-reverse:主轴为水平方向,起点在右端</span><br><span class="line"></span><br><span class="line">flex-direction:column;</span><br><span class="line">column:主轴为垂直方向,起点在上沿</span><br><span class="line"></span><br><span class="line">flex-direction:column-reverse;</span><br><span class="line">column-reverse:主轴为垂直方向,起点在下沿</span><br></pre></td></tr></table></figure><br><strong>2.flex-wrap属性</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">默认情况下,项目都排在一根轴线上,可以用flex-wrap来定义怎么排列</span><br><span class="line"></span><br><span class="line">flex-wrap:nowrap;</span><br><span class="line">nowrap为默认值:不换行</span><br><span class="line"></span><br><span class="line">flex-wrap:wrap;</span><br><span class="line">wrap:换行,第一行在上方</span><br><span class="line"></span><br><span class="line">flex-wrap:wrap-reverse;</span><br><span class="line">wrap-reverse:换行，第一行在下方</span><br></pre></td></tr></table></figure><br><strong>3.flex-flow属性</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">flex-flow属性是flex-direction属性和flex-wrap属性的简写,默认是row nowrap;</span><br><span class="line"></span><br><span class="line">flex-flow:flex-direction flex-wrap;</span><br></pre></td></tr></table></figure><br><strong>4.justify-content属性</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">justify-content属性定义了项目在主轴上的对齐方式</span><br><span class="line"></span><br><span class="line">justify-content:flex-start;</span><br><span class="line">flex-start为默认值:左对齐</span><br><span class="line"></span><br><span class="line">justify-content:flex-end;</span><br><span class="line">flex-end:右对齐</span><br><span class="line"></span><br><span class="line">justify-content:center;</span><br><span class="line">center:居中</span><br><span class="line"></span><br><span class="line">justify-content:space-between;</span><br><span class="line">space-between:两端对齐,项目之间的间隔相等</span><br><span class="line"></span><br><span class="line">justify-content:space-around;</span><br><span class="line">space-around:每个项目两侧间隔相等</span><br></pre></td></tr></table></figure><br><strong>5.align-items属性</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">align-items属性定义项目在侧轴上如何对齐</span><br><span class="line"></span><br><span class="line">align-items:flex-start;</span><br><span class="line">flex-start:侧轴开始位置对齐</span><br><span class="line"></span><br><span class="line">align-items:flex-end;</span><br><span class="line">flex-end:侧轴结束位置对齐</span><br><span class="line"></span><br><span class="line">align-items:center;</span><br><span class="line">center:侧轴中点位置对齐</span><br><span class="line"></span><br><span class="line">align-items:baseline;</span><br><span class="line">baseline:项目第一行文字的基线对齐</span><br><span class="line"></span><br><span class="line">align-items:stretch;</span><br><span class="line">strech为默认值:如果项目没有设置高度或者设置为auto,将占满整个容器的高度</span><br></pre></td></tr></table></figure><br><strong>6.align-content属性</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">align-content属性定义了多根轴线的对齐方式,如果项目只有一根轴线,</span><br><span class="line">该属性不起作用</span><br><span class="line"></span><br><span class="line">align-content:flex-start;</span><br><span class="line">flex-start:和侧轴的起点对齐</span><br><span class="line"></span><br><span class="line">align-content:flex-end;</span><br><span class="line">flex-end:和侧轴的终点对齐</span><br><span class="line"></span><br><span class="line">align-content:center;</span><br><span class="line">center:和侧轴的中点对齐</span><br><span class="line"></span><br><span class="line">align-content:space-between;</span><br><span class="line">space-between:和侧轴的两端对齐</span><br><span class="line"></span><br><span class="line">align-content:space-around;</span><br><span class="line">space-around:每根轴线两侧的间隔都相等</span><br><span class="line"></span><br><span class="line">align-content:strech;</span><br><span class="line">strech为默认值:轴线占满整个侧轴</span><br></pre></td></tr></table></figure><br>—end—<br>have a good trip! <img src="https://raw.githubusercontent.com/latale/photos/master/jmg.jpg" alt=""></p>
]]></content>
      
        
        <tags>
            
            <tag> 瞎扯淡 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[简易呼吸轮播图]]></title>
      <url>/2017/07/07/%E5%91%BC%E5%90%B8%E8%BD%AE%E6%92%AD%E5%9B%BE/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>简易呼吸轮播图</p>
<p>一个叫做简易呼吸的轮播图~~~~</p>
<a id="more"></a>
<p><img src="https://github.com/latale/photos/blob/master/demo.gif?raw=true" alt=""></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">	&lt;head&gt;</span><br><span class="line">	    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">	    &lt;title&gt;简易呼吸轮播图&lt;/title&gt;</span><br><span class="line">	    &lt;style type=&quot;text/css&quot;&gt;</span><br><span class="line">	        *&#123;</span><br><span class="line">	            margin: 0px;</span><br><span class="line">	            padding: 0px;</span><br><span class="line">	        &#125;</span><br><span class="line">	        .fade-box&#123;</span><br><span class="line">	            width: 900px;</span><br><span class="line">	            height: 540px;</span><br><span class="line">	            border: 1px solid #000;</span><br><span class="line">	            margin: 100px auto;</span><br><span class="line">	            position: relative;</span><br><span class="line">	        &#125;</span><br><span class="line">	        .fade-box ul&#123;</span><br><span class="line">	            list-style: none;</span><br><span class="line">	        &#125;</span><br><span class="line">	        .fade-box ul li&#123;</span><br><span class="line">	            width: 900px;</span><br><span class="line">	            height: 540px;</span><br><span class="line">	            position: absolute;</span><br><span class="line">	            top:0px;</span><br><span class="line">	            left:0px;</span><br><span class="line">	            display: none;</span><br><span class="line">	        &#125;</span><br><span class="line">	        .fade-box ul li img&#123;</span><br><span class="line">	            width: 100%;</span><br><span class="line">	            height:100%;</span><br><span class="line">	        &#125;</span><br><span class="line">	        .fade-box ul li.current&#123;</span><br><span class="line">	            display: block;</span><br><span class="line">	        &#125;</span><br><span class="line">	        .fade-box .circle&#123;</span><br><span class="line">	            position: absolute;</span><br><span class="line">	            bottom:20px;</span><br><span class="line">	            width:200px;</span><br><span class="line">	            height: 30px;</span><br><span class="line">	            left:50%;</span><br><span class="line">	            margin-left:-100px;</span><br><span class="line">	        &#125;</span><br><span class="line">	        .fade-box .circle ol&#123;</span><br><span class="line">	            list-style: none;</span><br><span class="line">	        &#125;</span><br><span class="line">	        .fade-box .circle ol li&#123;</span><br><span class="line">	            float: left;</span><br><span class="line">	            width: 20px;</span><br><span class="line">	            height: 20px;</span><br><span class="line">	            border-radius: 20px;</span><br><span class="line">	            margin-right: 30px;</span><br><span class="line">	            background: #ccc;</span><br><span class="line">	        &#125;</span><br><span class="line">	        .fade-box .circle ol .current&#123;</span><br><span class="line">	            background:skyblue</span><br><span class="line">	        &#125;</span><br><span class="line">	        .fade-box .fade-btn a&#123;</span><br><span class="line">	            display: block;</span><br><span class="line">	            width: 40px;</span><br><span class="line">	            height: 80px;</span><br><span class="line">	            position: absolute;</span><br><span class="line">	            font-size: 30px;</span><br><span class="line">	            color: #fff;</span><br><span class="line">	            background: rgba(0,0,0,0.7);</span><br><span class="line">	            line-height: 80px;</span><br><span class="line">	            text-decoration: none;</span><br><span class="line">	            top:50%;</span><br><span class="line">	            margin-top: -40px;</span><br><span class="line">	            text-align: center;</span><br><span class="line">	        &#125;</span><br><span class="line">	        .fade-box .fade-btn a:nth-child(1)&#123;</span><br><span class="line">	            left:0px;</span><br><span class="line">	        &#125;</span><br><span class="line">	        .fade-box .fade-btn a:nth-child(2)&#123;</span><br><span class="line">	            right:0px;</span><br><span class="line">	        &#125;</span><br><span class="line">	    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">	&lt;div class=&quot;fade-box&quot;&gt;</span><br><span class="line">	    &lt;ul&gt;</span><br><span class="line">	        &lt;li&gt;&lt;a href=&quot;javascript:void(0);&quot;&gt;&lt;img src=&quot;http://opfmdske3.bkt.clouddn.com/avatar.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">	        &lt;li&gt;&lt;a href=&quot;javascript:void(0);&quot;&gt;&lt;img src=&quot;http://opfmdske3.bkt.clouddn.com/3c56f44e251f95ca3f1ef39dc1177f3e6609528b.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">	        &lt;li&gt;&lt;a href=&quot;javascript:void(0);&quot;&gt;&lt;img src=&quot;http://opfmdske3.bkt.clouddn.com/110G31K5-6.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">	        &lt;li&gt;&lt;a href=&quot;javascript:void(0);&quot;&gt;&lt;img src=&quot;http://opfmdske3.bkt.clouddn.com/110G31K5-6.jpg&quot; alt=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">	    &lt;/ul&gt;</span><br><span class="line">	    &lt;div class=&quot;btn&quot;&gt;</span><br><span class="line">	        &lt;a href=&quot;javascript:void(0);&quot;&gt;&amp;lt;&lt;/a&gt;</span><br><span class="line">	        &lt;a href=&quot;javascript:void(0);&quot;&gt;&amp;gt;&lt;/a&gt;</span><br><span class="line">	    &lt;/div&gt;</span><br><span class="line">	    &lt;div class=&quot;circle&quot;&gt;</span><br><span class="line">	        &lt;ol&gt;</span><br><span class="line">	            &lt;li&gt;&lt;/li&gt;</span><br><span class="line">	            &lt;li&gt;&lt;/li&gt;</span><br><span class="line">	            &lt;li&gt;&lt;/li&gt;</span><br><span class="line">	            &lt;li&gt;&lt;/li&gt;</span><br><span class="line">	        &lt;/ol&gt;</span><br><span class="line">	    &lt;/div&gt;</span><br><span class="line">	&lt;/div&gt;</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;script src=&quot;https://cdn.bootcss.com/jquery/3.1.1/jquery.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">	&lt;script&gt;</span><br><span class="line">	$(function() &#123;</span><br><span class="line">		var bannerImgs = $(&apos;.fade-box ul li&apos;);</span><br><span class="line">	    var circles = $(&apos;.fade-box .circle ol li&apos;);</span><br><span class="line">	    var leftBtn = $(&apos;.fade-box .btn a:eq(0)&apos;);</span><br><span class="line">	    var rightBtn = $(&apos;.fade-box .btn a:eq(1)&apos;);</span><br><span class="line">	    var index = 0;</span><br><span class="line">	    circles.eq(0).addClass(&apos;current&apos;);</span><br><span class="line">	    bannerImgs.eq(0).fadeIn();</span><br><span class="line">	    //判断方向</span><br><span class="line">	    function runDir(dir)&#123;</span><br><span class="line">	        if (dir == 1) &#123;</span><br><span class="line">	            if (bannerImgs.is(&apos;:animated&apos;)) &#123;</span><br><span class="line">	                return;</span><br><span class="line">	            &#125;</span><br><span class="line">	            bannerImgs.eq(index).fadeOut();</span><br><span class="line">	            index++;</span><br><span class="line">	            if (index&gt;bannerImgs.length-1)&#123;</span><br><span class="line">	                index = 0;</span><br><span class="line">	            &#125;</span><br><span class="line">	            bannerImgs.eq(index).fadeIn();</span><br><span class="line">	            circles.eq(index).addClass(&apos;current&apos;).siblings().removeClass(&apos;current&apos;);</span><br><span class="line">	        &#125;else if (dir == 0) &#123;</span><br><span class="line">	            if (bannerImgs.is(&apos;:animated&apos;)) &#123;</span><br><span class="line">	                return;</span><br><span class="line">	            &#125;</span><br><span class="line">	            bannerImgs.eq(index).fadeOut();</span><br><span class="line">	            index--;</span><br><span class="line">	            if (index&lt;0)&#123;</span><br><span class="line">	                index = bannerImgs.length-1;</span><br><span class="line">	            &#125;</span><br><span class="line">	            bannerImgs.eq(index).fadeIn();</span><br><span class="line">	            circles.eq(index).addClass(&apos;current&apos;).siblings().removeClass(&apos;current&apos;);</span><br><span class="line">	        &#125;else&#123;</span><br><span class="line">	            throw &apos;请填写正确参数&apos;;</span><br><span class="line">	        &#125;</span><br><span class="line">	    &#125;</span><br><span class="line">	    rightBtn.click(function () &#123;</span><br><span class="line">	        runDir(1);</span><br><span class="line">	    &#125;);</span><br><span class="line">	    leftBtn.click(function () &#123;</span><br><span class="line">	        runDir(0);</span><br><span class="line">	    &#125;);</span><br><span class="line">	    circles.mouseenter(function () &#123;</span><br><span class="line">	        if (bannerImgs.is(&quot;:animated&quot;)) &#123;</span><br><span class="line">	            return;</span><br><span class="line">	        &#125;</span><br><span class="line">	        bannerImgs.eq(index).fadeOut();</span><br><span class="line">	        index = $(this).index();</span><br><span class="line">	        bannerImgs.eq(index).fadeIn();</span><br><span class="line">	        circles.eq(index).addClass(&apos;current&apos;).siblings().removeClass(&apos;current&apos;);</span><br><span class="line">	    &#125;)</span><br><span class="line">	    $(&apos;.fade-box&apos;).mouseenter(function () &#123;</span><br><span class="line">	        clearInterval(timer);</span><br><span class="line">	    &#125;);</span><br><span class="line">	    $(&apos;.fade-box&apos;).mouseleave(function () &#123;</span><br><span class="line">	        timer = setInterval(function () &#123;</span><br><span class="line">	            return runDir(1);</span><br><span class="line">	        &#125;,1000)</span><br><span class="line">	    &#125;)</span><br><span class="line">	    var timer = setInterval(function () &#123;</span><br><span class="line">	        return runDir(1);</span><br><span class="line">	    &#125;,2000);</span><br><span class="line">	&#125;)</span><br><span class="line">	&lt;/script&gt;</span><br><span class="line">	&lt;/html&gt;</span><br></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> css </tag>
            
            <tag> html </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[AJAX原理]]></title>
      <url>/2017/07/06/Laravel%E5%B8%B8%E7%94%A8%E5%AE%9E%E4%BE%8B%E7%B1%BB/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><h2 id="AJAX的使用"><a href="#AJAX的使用" class="headerlink" title="AJAX的使用"></a>AJAX的使用</h2><a id="more"></a>
<p>  AJAX的原理就是使用XMLHttprequest对象来向服务器进行异步请求，从服务器来获取数据，然后前台使用javascript来接受数据并渲染至HTML。</p>
<h2 id="XMLHttpRequest简单的来说，就是为了不阻塞用户的加载，在这个技术出现之前，可能就是同步，也就是说，在一个请求没完成之前，其他的请求是无法继续的，那么用户体验是非常差的，也就是所谓的等待“白屏”，这个技术很好的解决了这个问题，例如：点菜的时候，一个服务员可以为客人点餐，点完后，让客人等菜到，然后又可以为下一位客人点餐，实现异步操作的过程。"><a href="#XMLHttpRequest简单的来说，就是为了不阻塞用户的加载，在这个技术出现之前，可能就是同步，也就是说，在一个请求没完成之前，其他的请求是无法继续的，那么用户体验是非常差的，也就是所谓的等待“白屏”，这个技术很好的解决了这个问题，例如：点菜的时候，一个服务员可以为客人点餐，点完后，让客人等菜到，然后又可以为下一位客人点餐，实现异步操作的过程。" class="headerlink" title="XMLHttpRequest简单的来说，就是为了不阻塞用户的加载，在这个技术出现之前，可能就是同步，也就是说，在一个请求没完成之前，其他的请求是无法继续的，那么用户体验是非常差的，也就是所谓的等待“白屏”，这个技术很好的解决了这个问题，例如：点菜的时候，一个服务员可以为客人点餐，点完后，让客人等菜到，然后又可以为下一位客人点餐，实现异步操作的过程。"></a>XMLHttpRequest简单的来说，就是为了不阻塞用户的加载，在这个技术出现之前，可能就是同步，也就是说，在一个请求没完成之前，其他的请求是无法继续的，那么用户体验是非常差的，也就是所谓的等待“白屏”，这个技术很好的解决了这个问题，例如：点菜的时候，一个服务员可以为客人点餐，点完后，让客人等菜到，然后又可以为下一位客人点餐，实现异步操作的过程。</h2><pre><code>onreadystatechange    每次状态改变所触发事件的事件处理程序

responseText          用ajax从服务器来获取的数据包

status                网络的状态码，一般为200或者304

readyState            对象的状态码，4为完成
</code></pre><hr>
<pre><code>readyState 对象状态值
0 (未初始化) 对象已建立，但是尚未初始化（尚未调用open方法）
1 (初始化) 对象已建立，尚未调用send方法
2 (发送数据) send方法已调用，但是当前的状态及http头未知
3 (数据传送中) 已接收部分数据，因为响应及http头不全，这时通过responseBody和responseText获取部分数据会出现错误，
4 (完成) 数据接收完毕,此时可以通过通过responseXml和responseText获取完整的回应数据
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">function json2url(json)&#123;</span><br><span class="line">	var arr = [];</span><br><span class="line">	json.t = Math.random();</span><br><span class="line">	for(var name in json)&#123;</span><br><span class="line">		console.log(name);</span><br><span class="line">		arr.push(name + &quot;=&quot; + encodeURIComponent(json[name]));</span><br><span class="line">	&#125;</span><br><span class="line">	return arr.join(&quot;&amp;&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">function Jajax(options)&#123;</span><br><span class="line">	options = options || &#123;&#125;;</span><br><span class="line">	if(!options.url)return ;</span><br><span class="line">	</span><br><span class="line">	options.type = options.type || &quot;get&quot;;</span><br><span class="line">	options.data = options.data || &#123;&#125;;</span><br><span class="line">	options.timeout = options.timeout || 0;</span><br><span class="line">	</span><br><span class="line">	var str = json2url(options.data);//处理字符串</span><br><span class="line">	</span><br><span class="line">	//1 创建</span><br><span class="line">	if(window.XMLHttpRequest)&#123;</span><br><span class="line">		var xhr = new XMLHttpRequest();   //非IE浏览器</span><br><span class="line">	&#125; else &#123;</span><br><span class="line">		var xhr = new ActiveXObject(&quot;Microsoft.XMLHTTP&quot;); //IE浏览器</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	if(options.type == &quot;get&quot;)&#123;</span><br><span class="line">		//2 连接</span><br><span class="line">		//xhr.open(&quot;get&quot;,options.url + &quot;?&quot; + str,true);</span><br><span class="line">		xhr.open(&quot;get&quot;,options.url,true);</span><br><span class="line">		xhr.open(&quot;get&quot;,options.url + &quot;?&quot; + str,true);</span><br><span class="line">		//3 发送</span><br><span class="line">		xhr.send();</span><br><span class="line"></span><br><span class="line">	&#125; else &#123;</span><br><span class="line">		//2 连接</span><br><span class="line">		xhr.open(&quot;post&quot;,options.url,true);</span><br><span class="line">		xhr.setRequestHeader(&quot;Content-Type&quot;,&quot;application/x-www-form-urlencoded&quot;); //添加请求头</span><br><span class="line">		//3 发送</span><br><span class="line">		xhr.send(str);</span><br><span class="line">	&#125;</span><br><span class="line">		</span><br><span class="line">	//4 接收</span><br><span class="line">	xhr.onreadystatechange = function()&#123;</span><br><span class="line">		if(xhr.readyState == 4)&#123;//完成</span><br><span class="line">			clearTimeout(timer);</span><br><span class="line">			if(xhr.status &gt;= 200 &amp;&amp; xhr.status &lt; 300 || xhr.status == 304)&#123;</span><br><span class="line">				options.success &amp;&amp; options.success(xhr.responseText);</span><br><span class="line">			&#125; else &#123;</span><br><span class="line">				options.error &amp;&amp; options.error(xhr.status);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line">	</span><br><span class="line">	if(options.timeout)&#123;</span><br><span class="line">		var timer = setTimeout(function()&#123;</span><br><span class="line">			xhr.abort();	 //请求超时不请求</span><br><span class="line">		&#125;,options.timeout);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  使用：</span><br><span class="line">  Jajax(&#123;</span><br><span class="line">    type:&apos;get&apos;,</span><br><span class="line">    data:&#123;&apos;name&apos;:&apos;july&apos;,&apos;age&apos;:22&#125;,</span><br><span class="line">    url:&apos;latale.github.io&apos;,</span><br><span class="line">    success:function(response) &#123;</span><br><span class="line">      const data = JSON.parse(response);</span><br><span class="line">        if(response.status == 200) &#123;</span><br><span class="line">          console.log(status);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;,</span><br><span class="line">    error:function(error) &#123;</span><br><span class="line">      console.log(error);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure>
<p>——end——</p>
<p><font color="yellow" size="16">have a good trip!</font> <img src="https://raw.githubusercontent.com/latale/photos/master/jmg.jpg" alt=""></p>
]]></content>
      
        
        <tags>
            
            <tag> ajax,javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于变量提升的一些事~]]></title>
      <url>/2017/07/01/var/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>关于变量提升的一些事~</p>
<p>最近在看一些变量的东西,可能对js的变量提升有些诧异,所以就来写一写~~~~</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    function Foo() &#123;</span><br><span class="line">        sayMyName = function() &#123;</span><br><span class="line">            console.log(&apos;july&apos;)</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">    sayMyName();</span><br><span class="line">    var sayMyName = function() &#123;</span><br><span class="line">        console.log(&apos;july1&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    sayMyName();</span><br><span class="line">    function sayMyName() &#123;</span><br><span class="line">        console.log(&apos;july2&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    sayMyName();</span><br><span class="line">    Foo();</span><br><span class="line">    sayMyName();</span><br><span class="line">    //模拟</span><br><span class="line">    function Foo() &#123;</span><br><span class="line">        sayMyName = function() &#123;</span><br><span class="line">            console.log(&apos;july&apos;)</span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;;</span><br><span class="line">    function sayMyName() &#123;  //因为同名函数和变量,同名函数会提升,同名变量不会提升。</span><br><span class="line">        console.log(&apos;july2&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    sayMyName();  //所以这里打印的是&apos;july2&apos;;</span><br><span class="line">    var sayMyName = function() &#123;</span><br><span class="line">        console.log(&apos;july1&apos;);</span><br><span class="line">    &#125;</span><br><span class="line">    sayMyName(); //执行到这里,因为上面又覆盖了,所以打印的是&apos;july1&apos;;</span><br><span class="line">    Foo();//因为执行了FOO()的函数,所以相当于把sayMyName函数重新定义</span><br><span class="line">    sayMyName(); //所以打印的是&apos;july&apos;</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">    var a = 10;</span><br><span class="line">    function f1() &#123;</span><br><span class="line">        var a = 10;</span><br><span class="line">        console.log(a);</span><br><span class="line">    &#125;</span><br><span class="line">    f1();</span><br><span class="line">    console.log(a);</span><br><span class="line"></span><br><span class="line">    //模拟</span><br><span class="line">    var a;   //在预解析的时候,变量和函数会提升到作用域的顶层。</span><br><span class="line">    function f1() &#123;</span><br><span class="line">        var a;</span><br><span class="line">        console.log(a);</span><br><span class="line">        a = 20;</span><br><span class="line">    &#125;</span><br><span class="line">    a = 10;</span><br><span class="line">    f1(); //当我们执行调用f1函数的时候因为变量会提升到函数作用域的顶层,所以打印的是undefined;</span><br><span class="line">    console.log(a); //因为函数里的变量是局部变量所以不会影响到全局变量,所以这里打印的还是10;</span><br><span class="line"></span><br><span class="line">    function f1() &#123;</span><br><span class="line">        console.log(1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    console.log(f1);   //同名函数和同名变量的时候,变量不会提升,所以打印的是f1函数体</span><br><span class="line"></span><br><span class="line">    var f1 = &quot;july&quot;;  //当我们执行到这里的时候,我们又把函数覆盖成了一个变量.</span><br><span class="line">    console.log(f1);//所以这里打印的是&quot;july&quot;</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">    var a = &quot;july&quot;;</span><br><span class="line">    foo();</span><br><span class="line"></span><br><span class="line">    function foo() &#123;</span><br><span class="line">        console.log(a);</span><br><span class="line">        var a = &quot;JESSICA&quot;;</span><br><span class="line">        console.log(a);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    //模拟</span><br><span class="line">    var a;  //预解析的时候,变量和函数提升到作用域的顶层。</span><br><span class="line">    function foo() &#123;</span><br><span class="line">        var a; //变量提升到函数作用域的顶层。</span><br><span class="line">        console.log(a); //所以这里打印的是undefined;</span><br><span class="line">        a= &quot;JESSICA&quot;; //执行到这行的时候又给a赋值了&apos;JESSICA&apos;;</span><br><span class="line">        console.log(a);//所以这里是&apos;JEESICA&apos;</span><br><span class="line">    &#125;</span><br><span class="line">    a =&apos;july&apos;;</span><br><span class="line">    foo(); //调用函数</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">    function foo() &#123;</span><br><span class="line">        if (&apos;a&apos; in window) &#123;</span><br><span class="line">            var a = 10;</span><br><span class="line">        &#125;</span><br><span class="line">        console.log(a);</span><br><span class="line">    &#125;</span><br><span class="line">    foo();</span><br><span class="line"></span><br><span class="line">    //模拟</span><br><span class="line">    function foo() &#123;</span><br><span class="line">        var a; //变量提升到函数顶层。</span><br><span class="line">        if (&apos;a&apos; in window) &#123; //因为变量a是声明在函数作用域里,所以不在window。所以为false;&apos;</span><br><span class="line">            a = 10;</span><br><span class="line">        &#125;</span><br><span class="line">        console.log(a); //所以这里执行的是undefined;</span><br><span class="line">    &#125;</span><br><span class="line">    foo(); //调用函数</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">    if (&apos;a&apos; in window) &#123;</span><br><span class="line">        var a = 10;</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(a);</span><br><span class="line"></span><br><span class="line">    var a; //js里除了函数作用域其他都是全局作用域。</span><br><span class="line">    if (&apos;a&apos; in window) &#123;//所以a在window里,所以是true</span><br><span class="line">        a = 10; //a赋值为10</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(a);  //所以打印的是10</span><br><span class="line"></span><br><span class="line">    if (!&apos;a&apos; in window) &#123;</span><br><span class="line">        var a = 10;</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(a);</span><br><span class="line"></span><br><span class="line">    //模拟</span><br><span class="line">    var a; //js里除了函数作用域其他都是全局作用域。</span><br><span class="line">    if (!&apos;a&apos; in window) &#123; //变量a不在window里,所以是false</span><br><span class="line">        a = 10;</span><br><span class="line">    &#125;</span><br><span class="line">    console.log(a); //所以打印的是undefined</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">    var foo = 1;</span><br><span class="line">    function Foo() &#123;</span><br><span class="line">        if(!foo) &#123;</span><br><span class="line">            var foo = 10;</span><br><span class="line">        &#125;</span><br><span class="line">        console.log(foo);</span><br><span class="line">    &#125;</span><br><span class="line">    Foo();</span><br><span class="line"></span><br><span class="line">    //模拟</span><br><span class="line">    var foo;</span><br><span class="line">    function Foo() &#123;</span><br><span class="line">        var foo; //变量提升到函数作用域顶层。</span><br><span class="line">        if(!foo) &#123; //因为是去反,上面的undefined为假去反就是真,为true</span><br><span class="line">            foo = 10; //给foo赋值为10</span><br><span class="line">        &#125;</span><br><span class="line">        console.log(foo); //打印为10</span><br><span class="line">    &#125;</span><br><span class="line">    foo = 1;</span><br><span class="line">    Foo();</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">    function Foo() &#123;</span><br><span class="line">        sayMyName = function()&#123;</span><br><span class="line">            console.log(&quot;1&quot;);</span><br><span class="line">        &#125;;</span><br><span class="line">        return this;</span><br><span class="line">    &#125;</span><br><span class="line">    Foo.sayMyName = function() &#123;</span><br><span class="line">        console.log(&quot;2&quot;);</span><br><span class="line">    &#125;;</span><br><span class="line">    Foo.prototype.sayMyName = function()&#123;</span><br><span class="line">        console.log(&quot;3&quot;);</span><br><span class="line">    &#125;;</span><br><span class="line">    var sayMyName = function() &#123;</span><br><span class="line">        console.log(&quot;4&quot;);</span><br><span class="line">    &#125;;</span><br><span class="line">    function sayMyName()&#123;</span><br><span class="line">        console.log(&quot;5&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    Foo.sayMyName();</span><br><span class="line">    sayMyName();</span><br><span class="line">    Foo().sayMyName();</span><br><span class="line">    sayMyName();</span><br><span class="line">    new Foo.sayMyName()</span><br><span class="line">    new Foo().sayMyName();</span><br><span class="line">    new new Foo().sayMyName();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //模拟</span><br><span class="line">    function Foo() &#123;</span><br><span class="line">        sayMyName = function()&#123;</span><br><span class="line">            console.log(&quot;1&quot;);</span><br><span class="line">        &#125;;</span><br><span class="line">        return this;</span><br><span class="line">    &#125;</span><br><span class="line">    Foo.sayMyName = function() &#123;</span><br><span class="line">        console.log(&quot;2&quot;);</span><br><span class="line">    &#125;;</span><br><span class="line">    Foo.prototype.sayMyName = function()&#123;</span><br><span class="line">        console.log(&quot;3&quot;);</span><br><span class="line">    &#125;;</span><br><span class="line">    function sayMyName()&#123; //同名函数和同名变量情况下,函数提升。</span><br><span class="line">        console.log(&quot;5&quot;);</span><br><span class="line">    &#125;</span><br><span class="line">    var sayMyName = function() &#123;</span><br><span class="line">        console.log(&quot;4&quot;);</span><br><span class="line">    &#125;;</span><br><span class="line">    Foo.sayMyName(); //这里说的是函数的静态方法,所以打印的是2;</span><br><span class="line">    sayMyName(); //这里执行的是调用sayMYname的函数所以是4;</span><br><span class="line">    Foo().sayMyName(); //调用FOO函数,重新定义了sayMyName函数,所以打印的是&apos;1&apos;</span><br><span class="line">    sayMyName();//因为上面调用FOO函数,重新定义了函数,所以还是&apos;1&apos;;</span><br><span class="line">    new Foo.sayMyName()//打印的是函数的静态方法也是2,new 2 == 2,前面的new无意义。</span><br><span class="line">    new Foo().sayMyName();//这里是new了个新对象,所以指向的是原型对象上的sayMyName方法，所以打印的是&apos;3&apos;</span><br><span class="line">    new new Foo().sayMyName();//等同于上面,只不过new 3 == 3，无意义。</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> var </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[创建对象的几种方法]]></title>
      <url>/2017/06/29/%E5%88%9B%E5%BB%BA%E5%AF%B9%E8%B1%A1/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>字面量方式创建对象</p>
<p>写了几种字面量方式创建对象的方法~~~~</p>
<a id="more"></a>
<hr>
<p><strong>基本写法</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">var person = &#123;</span><br><span class="line">	name:&apos;July&apos;,</span><br><span class="line">	age:22,</span><br><span class="line">	from:Ningbo,</span><br><span class="line">	getName:function() &#123;</span><br><span class="line">		console.log(this.name);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br><strong>存在的问题</strong></p>
<pre><code>1.代码复用性差
2.如要创建大量的同类型的对象,则需要重复大量的代码。
</code></pre><h2 id="内置构造函数创建对象"><a href="#内置构造函数创建对象" class="headerlink" title="内置构造函数创建对象"></a>内置构造函数创建对象</h2><p><strong>JS中的内置构造函数</strong></p>
<pre><code>String,Number,Boolean,Array,Date,Function,Object,RegExp
</code></pre><p><strong>基本写法</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">var person = new Object();</span><br><span class="line">person.name = &quot;July&quot;;</span><br><span class="line">person.age = 22;</span><br><span class="line">person.from = &apos;Ningbo&apos;;</span><br><span class="line">Person.say:function() &#123;</span><br><span class="line">	console.log(this.name);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br><strong>存在的问题</strong></p>
<pre><code>1.创建的对象复用性差,无法复用。
2.如果需要创建同一类型的对象,需要写大量重复性代码。
</code></pre><h2 id="工厂函数创建对象"><a href="#工厂函数创建对象" class="headerlink" title="工厂函数创建对象"></a>工厂函数创建对象</h2><p><strong>基本写法</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">function createPerson(name,age,from,hobby) &#123;</span><br><span class="line">	var person = new Object();</span><br><span class="line">	person.name = name;</span><br><span class="line">	person.age = age;</span><br><span class="line">	person.from = from;</span><br><span class="line">	person.hobby = hobby;</span><br><span class="line">	person.say = function() &#123;</span><br><span class="line">		console.log(this.name);</span><br><span class="line">	&#125;;</span><br><span class="line">		return person;</span><br><span class="line">&#125;;</span><br><span class="line">	//使用工厂函数创建对象</span><br><span class="line">	var person1 = createPerson(&apos;July&apos;,22,&apos;Ningbo&apos;,&apos;eat&apos;);</span><br><span class="line">	var person1 = createPerson(&apos;小明&apos;,20,&apos;Shanghai&apos;,&apos;run&apos;);</span><br><span class="line">	var person1 = createPerson(&apos;小红&apos;,15,&apos;Xinjiang&apos;,&apos;sleep&apos;);</span><br><span class="line">	var person1 = createPerson(&apos;July&apos;,22,&apos;Guangdong&apos;,&apos;read&apos;);</span><br><span class="line">	//打印调用对象的方法</span><br><span class="line">	console.log(person1.name);</span><br><span class="line">	console.log(person2.name);</span><br><span class="line">	console.log(person3.name);</span><br><span class="line">	console.log(person4.name);</span><br><span class="line">	</span><br></pre></td></tr></table></figure><br><strong>工厂函数说明</strong></p>
<pre><code>工厂函数方式创建对象就是对内置构造函数创建对象的过程进行了封装，适用于大量生产同类型的对象。
{% codeblock %}
		function createPerson(name,age,from,hobby) {
			var person = new Object(); //原料
				//创建对象设置属性和方法,进行加工
				person.age = age;
				person.from = from;
				person.hobby = hobby;
				person.say = function() {
					console.log(this.name);
				};
				return person; //原料出厂
		}

{% endcodeblock %}
</code></pre><p><strong>思路</strong></p>
<pre><code>把固定不变的封装起来,变化的为函数的参数
</code></pre><p><strong>工厂函数创建对象实现过程</strong></p>
<pre><code>1.提供一个构造函数
2.在函数内部用new关键字创建一个对象
3.设置对象的属性和方法
4.返回对象
</code></pre><p><strong>自定义构造函数创建对象</strong></p>
<p><strong>基本写法</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">function Person(name,age,from,hobby) &#123;</span><br><span class="line">	// var this = new Object(); 默认创建一个对象并赋值给this</span><br><span class="line">	this.name = name;</span><br><span class="line">	this.age = age;</span><br><span class="line">	this.from = from;</span><br><span class="line">	this.hobby = hobby;</span><br><span class="line">	this.say:function() &#123;</span><br><span class="line">		console.log(this.name);</span><br><span class="line">	&#125;</span><br><span class="line">	// return this 默认返回一个对象</span><br><span class="line">&#125;</span><br><span class="line">	自定义构造函数创建对象</span><br><span class="line">	var p1 = new Person(&apos;July&apos;,22,&apos;Ningbo&apos;,&apos;eat&apos;);</span><br><span class="line">	var p2 = new Person(&apos;小明&apos;,20,&apos;Shanghai&apos;,&apos;run&apos;);</span><br><span class="line">	var p3 = new Person(&apos;小红&apos;,15,&apos;Xinjiang&apos;,&apos;sleep&apos;);</span><br><span class="line">	var p4 = new Person(&apos;July&apos;,22,&apos;Guangdong&apos;,&apos;read&apos;);</span><br><span class="line">	</span><br></pre></td></tr></table></figure><br><strong>构造函数与new关键字</strong></p>
<pre><code>构造函数与普通函数的区别:函数的首字母大写。
构造函数的作用:完成对象的初始化。
new关键字的作用:用于创建对象(new Object());
</code></pre><p><strong>自定义构造函数和简单工厂函数的对比</strong></p>
<pre><code>1.函数的首字母大号(用于区别构造函数和普通函数)
2.创建对象的过程是new关键字实现
3.在函数内部会自动创建新对象,并且赋值给this
4.自动返回创建出来的对象
</code></pre><p><strong>构造函数的执行过程</strong></p>
<pre><code>1.使用new关键字创建对象
2.把新创建的对象赋值给this
3.在构造函数内部使用this为新创建的对象设置属性和方法
4.默认返回新创建的对象(普通函数如果不显示return则返回undefined)
</code></pre><p><strong>构造函数的返回值</strong></p>
<pre><code>1.如果在构造函数中没有显示return,则默认返回新创建的对象
2.如果在构造函数中显示return
    1.return的是对象,则直接返回该对象,覆盖新创建的对象
    2.return的是null或是基本数据类型,则返回新创建的对象
</code></pre><p><strong>构造函数的问题</strong></p>
<pre><code>每次创建对象,都要创建函数,对象方法内部实现的一模一样,则造成了资源浪费
</code></pre><p><strong>对象类型</strong></p>
<pre><code>检查对象类型:instanceOf 获取对象的类型:Object.prototype.toString.call(obj)
</code></pre><p><strong>对象的构造器属性</strong></p>
<pre><code>function Person(name) {
    this.name = &apos;July&apos;;
}
console.log(this.constructor);
属性的名称:constructor
属性的作用:指向创建对象的构造函数
</code></pre><p><strong>构造函数的调用</strong></p>
<pre><code>1.构造函数可以像普通函数一样不通过new关键字来调用
2.在使用构造函数创建对象的时候,如果没有传递参数,则可以省略括号
</code></pre><p><strong>this</strong></p>
<pre><code>1.如果使用new构造函数的方式调用,则this的指向内部创建的新对象
2.如果像普通函数一样调用构造函数,则this指向全局对象window
</code></pre>]]></content>
      
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> object </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[面向对象编程]]></title>
      <url>/2017/06/25/%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E8%BF%87%E7%A8%8B/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>面向过程和面向对象过程<br>1.面向对象编程和面向过程编程是一种编程思想,具体的语言关系不大。</p>
<p>2.面向过程和面向对象编程的区别</p>
<pre><code>面向过程编程：
    关注点在于解决问题需要的每一个步骤：
    示例：
    自己洗衣服的过程
    1.收集需要洗的衣服
    2.准备洗衣粉
    3.把衣服放到桶里
    4.使劲搓
    5.洗好的衣服冲洗干净
    6.晾晒
面向对象编程：
    1.把衣服收集起来
    2.找个洗衣机
    3.设置程序
</code></pre><a id="more"></a>
<h2 id="面向对象的三大特性"><a href="#面向对象的三大特性" class="headerlink" title="面向对象的三大特性"></a>面向对象的三大特性</h2><p>面向对象的三大特性：封装、继承、多态</p>
<h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><pre><code>可复用|隐蔽高
</code></pre><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">	var name = &apos;仙剑奇侠传&apos;;</span><br><span class="line">	var actors = [&apos;霍建华&apos;,&apos;胡歌&apos;,&apos;唐嫣&apos;];</span><br><span class="line">	var showTime =&quot;2006-1-1 2006-8-1&quot;;</span><br><span class="line">	var director = &quot;匿名&quot;;</span><br><span class="line">	var type = &quot;古装剧&quot;;</span><br><span class="line">	var play = function() &#123;</span><br><span class="line">		//播放</span><br><span class="line">	&#125;;</span><br><span class="line">	把上面的变量封装到一个对象里更有语义化。</span><br><span class="line">	var film = &#123;</span><br><span class="line">		name : &apos;仙剑奇侠传&apos;,</span><br><span class="line">		actors : [&apos;霍建华&apos;,&apos;胡歌&apos;,&apos;唐嫣&apos;],</span><br><span class="line">		showTime :&quot;2006-1-1 2006-8-1&quot;,</span><br><span class="line">		director : &quot;匿名&quot;,</span><br><span class="line">		type : &quot;古装剧&quot;,</span><br><span class="line">		play : function() &#123;</span><br><span class="line">			//播放</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;;</span><br><span class="line">继承</span><br><span class="line">---</span><br><span class="line">	获取已经有的对象的已有属性和方法的一种方式。</span><br><span class="line">代码示例</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	//创建一个空对象</span><br><span class="line">	var obj = &#123;&#125;;</span><br><span class="line">	//上面的film拥有很多的属性和方法</span><br><span class="line">	//可以遍历film对象属性,来进行赋值</span><br><span class="line">	for(var key in film) &#123;</span><br><span class="line">		obj[key] = film[key];</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">多态</span><br><span class="line">---</span><br><span class="line">	多态：polymorphism = poly(复数) + morph(形态) + ism</span><br><span class="line">	多用强类型语言,JavaScript具备与生俱来的多态特性。</span><br><span class="line">	多态表现为：</span><br><span class="line">	1.同一操作,作用于不同的对象,会产生不同的解释和行为。</span><br><span class="line">	2.隐藏不同。</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> object </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[JS瀑布流]]></title>
      <url>/2017/06/22/%E7%80%91%E5%B8%83%E6%B5%81/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>JS的瀑布流</p>
<p>JS瀑布流，大概就是像瀑布一样的流式布局，等宽不等高。大概思路就是每次下一行循环对比最低的一行，就把这个图定位到这列图片下去，以此类推，为了节省带宽，就是节流，在循环的最后一张图的时候，如果 screen的高度 + scroll的高度 &gt; 最后一张图片高度的一半 + scroll高度 则进行再次循环。<br><a id="more"></a></p>
<p><img src="https://github.com/latale/photos/blob/master/fall.gif?raw=true" alt=""><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br></pre></td><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;瀑布流&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">        *&#123;</span><br><span class="line">            margin: 0;</span><br><span class="line">            padding: 0;</span><br><span class="line">            list-style:none;</span><br><span class="line">        &#125;</span><br><span class="line">        #main&#123;</span><br><span class="line">            position: relative;</span><br><span class="line">        &#125;</span><br><span class="line">            img&#123;</span><br><span class="line">                width:180px;</span><br><span class="line">            &#125;</span><br><span class="line">        .box&#123;</span><br><span class="line">            width:200px;</span><br><span class="line">            padding:15px 0 0 15px;</span><br><span class="line">            float:left;</span><br><span class="line">        &#125;</span><br><span class="line">        .pic&#123;</span><br><span class="line">            padding:10px;</span><br><span class="line">            border:1px solid #ccc;</span><br><span class="line">        &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;div id=&quot;main&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/35.JPG&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/20.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/28.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/29.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/48.JPG&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/47.JPG&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/bb.JPG&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/sys.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/sy.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/yt.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/57.JPG&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/58.JPG&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/mty.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/140fxq.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/35.JPG&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/20.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/28.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/29.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/48.JPG&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/47.JPG&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/bb.JPG&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/sys.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/sy.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/yt.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/57.JPG&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/58.JPG&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/mty.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/140fxq.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/35.JPG&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/20.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/28.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/29.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/48.JPG&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/47.JPG&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/bb.JPG&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/sys.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/sy.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/yt.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/57.JPG&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/58.JPG&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/mty.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">        &lt;div class=&quot;box&quot;&gt;&lt;div class=&quot;pic&quot;&gt;&lt;img src=&quot;imgs/140fxq.jpg&quot;&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script src=&quot;js/Underscore-min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script src=&quot;js/MyFunc.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">        var timer = null;</span><br><span class="line">        window.onload = function() &#123;</span><br><span class="line">                waterFall(&apos;main&apos;, &apos;box&apos;);</span><br><span class="line">                window.onresize = function()&#123;</span><br><span class="line">                                clearInterval(timer);</span><br><span class="line">                        timer = setInterval(function()&#123;</span><br><span class="line">                                waterFall(&apos;main&apos;,&apos;box&apos;);</span><br><span class="line">                        &#125;,200)</span><br><span class="line">                &#125;</span><br><span class="line">                window.onscroll = function () &#123;</span><br><span class="line">                        if (loadnewimage()) &#123;</span><br><span class="line">                                var dataarr = [</span><br><span class="line">                                        &#123;src: &apos;38.JPG&apos;&#125;,</span><br><span class="line">                                        &#123;src: &apos;39.JPG&apos;&#125;,</span><br><span class="line">                                        &#123;src: &apos;40.JPG&apos;&#125;,</span><br><span class="line">                                        &#123;src: &apos;51.JPG&apos;&#125;,</span><br><span class="line">                                        &#123;src: &apos;mty.jpg&apos;&#125;,</span><br><span class="line">                                        &#123;src: &apos;qst.jpg&apos;&#125;,</span><br><span class="line">                                        &#123;src: &apos;jdc.jpg&apos;&#125;</span><br><span class="line">                                ];</span><br><span class="line">                                for (var i = 0; i &lt; dataarr.length; i++) &#123;</span><br><span class="line">                                        var newbox = document.createElement(&apos;div&apos;);</span><br><span class="line">                                        $(&apos;main&apos;).appendChild(newbox);</span><br><span class="line">                                        newbox.className = &apos;box&apos;;</span><br><span class="line">                                        var newpic = document.createElement(&apos;div&apos;);</span><br><span class="line">                                        newbox.appendChild(newpic);</span><br><span class="line">                                        var newimg = document.createElement(&apos;img&apos;);</span><br><span class="line">                                        newbox.appendChild(newimg);</span><br><span class="line">                                        newimg.src = &apos;imgs/&apos; + dataarr[i].src;</span><br><span class="line">                                &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                        waterFall(&apos;main&apos;, &apos;box&apos;);</span><br><span class="line">                &#125;</span><br><span class="line">                function waterFall(obj, box) &#123;</span><br><span class="line">                        var allbox = document.getElementsByClassName(box);</span><br><span class="line">                        var main = document.getElementById(obj);</span><br><span class="line">                        var boxWidth = allbox[0].offsetWidth;</span><br><span class="line">                        var screenW = document.body.clientWidth || document.documentElement.clientWidth;</span><br><span class="line">                        var cols = parseInt(screenW / boxWidth);</span><br><span class="line">                        main.style.width = boxWidth * cols + &apos;px&apos;;</span><br><span class="line">                        main.style.margin = &apos;0 auto&apos;;</span><br><span class="line">                        var heightarr = [];</span><br><span class="line">                        for (var i = 0; i &lt; allbox.length; i++) &#123;</span><br><span class="line">                                var boxheight = allbox[i].offsetHeight;</span><br><span class="line">                                if (i &lt; cols) &#123;</span><br><span class="line">                                        heightarr.push(boxheight);</span><br><span class="line">                                        allbox[i].style=&apos;&apos;;</span><br><span class="line">                                &#125; else &#123;</span><br><span class="line">                                        var minheight = _.min(heightarr);</span><br><span class="line">                                        var minboxindex = heightarr.indexOf(minheight);</span><br><span class="line">                                        allbox[i].style.position = &apos;absolute&apos;;</span><br><span class="line">                                        allbox[i].style.left = minboxindex * boxWidth + &apos;px&apos;;</span><br><span class="line">                                        allbox[i].style.top = minheight + &apos;px&apos;;</span><br><span class="line">                                        heightarr[minboxindex] += boxheight;</span><br><span class="line">                                &#125;</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                function loadnewimage() &#123;</span><br><span class="line">                        var allbox = document.getElementsByClassName(&apos;box&apos;);</span><br><span class="line">                        var lastbox = allbox[allbox.length - 1];</span><br><span class="line">                        var screenH = document.body.clientHeight || document.documentElement.clientHeight;</span><br><span class="line">                        var scrollTop = scroll().top;</span><br><span class="line">                        var lastboxheight = lastbox.offsetTop + lastbox.offsetHeight * 0.5;</span><br><span class="line">                        return lastboxheight &lt;= screenH + scrollTop;</span><br><span class="line">                &#125;</span><br><span class="line">        &#125;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Javascript中的原型式继承]]></title>
      <url>/2017/06/20/%E5%8E%9F%E5%9E%8B%E7%BB%A7%E6%89%BF/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p><strong>继承的概念</strong></p>
<p>继承:通过一定的方式事项某个类型A获取另外一个类型B的属性和方法其中类型A就是子类型,类型B就是父类型。</p>
<a id="more"></a>
<p><strong>Javascript的继承</strong></p>
<pre><code>Object是所有对象的父级|父类型|超类型,
js中所有的对象都直接或间接继承自Object。继承有两种方式,接受继承和实现继承,
在js中只有实现继承,试下继承主要依赖原型链来完成。

Javascript实现继承的几种方式

1.原型式继承
2.原型链继承
3.经典继承
4.组合继承
</code></pre><h2 id="原型式继承"><a href="#原型式继承" class="headerlink" title="原型式继承"></a>原型式继承</h2><p><strong>原型链继承方式A</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">	//提供一个构造函数</span><br><span class="line">	function Person(name,age) &#123;</span><br><span class="line">		this.name = name;</span><br><span class="line">		this.age = age;</span><br><span class="line">	&#125;;</span><br><span class="line">	//设置原型对象的属性</span><br><span class="line">	Person.prototype.className = &apos;1班&apos;;</span><br><span class="line"></span><br><span class="line">	//使用构造函数来创建原型对象</span><br><span class="line">	var p1 = new Person(&apos;小明&apos;,10);</span><br><span class="line">	var p2 = new Person(&apos;小红&apos;,20);</span><br><span class="line"></span><br><span class="line">	//打印p1,p2的className</span><br><span class="line">	console.log(p1.className); //1班</span><br><span class="line">	console.log(p2.className); //1班</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>原型链继承方式B</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">	//提供一个构造函数</span><br><span class="line">	function Person(name,age) &#123;</span><br><span class="line">		this.name = name;</span><br><span class="line">		this.age = age;</span><br><span class="line">	&#125;;</span><br><span class="line">	//设置原型对象的属性</span><br><span class="line">	Person.prototype = &#123;</span><br><span class="line">		constructor:Person,</span><br><span class="line">		className:&apos;1班&apos;</span><br><span class="line">	&#125;;</span><br><span class="line"></span><br><span class="line">	//使用构造函数来创建原型对象</span><br><span class="line">	var p1 = new Person(&apos;小明&apos;,10);</span><br><span class="line">	var p2 = new Person(&apos;小红&apos;,20);</span><br><span class="line">	</span><br><span class="line">	//打印p1,p2的className</span><br><span class="line">	console.log(p1.className); //1班</span><br><span class="line">	console.log(p2.className); //1班</span><br><span class="line">	</span><br><span class="line">	//对象p1,p2继承了构造函数原型对象的属性className,</span><br><span class="line">	但是使用原型替换的方式实现继承的时候,原有原型对象中的属性和方法会丢失。</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><strong>原型链继承方式C</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">//提供一个超类型|父类型构造函数</span><br><span class="line">function SuperPerson() &#123;</span><br><span class="line">	this.name = &apos;SuperPerson&apos;;</span><br><span class="line">	this.showName = function() &#123;</span><br><span class="line">		console.log(this.name);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">//设置父类型的原型属性和原型方法</span><br><span class="line">	SuperPerson.prototype.info = &apos;SuperPerson的信息&apos;;</span><br><span class="line">	SuperPerson.prototype.showinfo = function() &#123;</span><br><span class="line">		console.log(this.info);</span><br><span class="line">	&#125;</span><br><span class="line">//提供子类型</span><br><span class="line">	function Person() &#123;&#125;;</span><br><span class="line">//设置继承</span><br><span class="line">	Person.prototype = SuperPerson.prototype;</span><br><span class="line">	Person.prototype.constructor = Person;</span><br><span class="line">	</span><br><span class="line">	var p1 = new Person();</span><br><span class="line">	console.log(p1.name);  //undefined</span><br><span class="line">	console.log(p1.info);  //SuperPerson的信息</span><br><span class="line">	p1.showinfo(); //SuperPerson的信息</span><br><span class="line">	p1.showName(); //not a function</span><br><span class="line">	</span><br></pre></td></tr></table></figure>
<p><strong>结论</strong></p>
<pre><code>上面的方式可以继承父类型的原型属性和原型方法,但是无法继承实例属性和实例方法
</code></pre>]]></content>
      
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> object </tag>
            
            <tag> prototype </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[起点]]></title>
      <url>/2017/06/20/artitle/</url>
      <content type="html"><![CDATA[<script src="/assets/js/APlayer.min.js"> </script><p>这是一条咸鱼的生活~<br><img src="https://timgsa.baidu.com/timg?image&amp;quality=80&amp;size=b9999_10000&amp;sec=1488047384701&amp;di=17382c8b86f614f32f3c99c90c196ad7&amp;imgtype=0&amp;src=http%3A%2F%2Fdynamic-image.yesky.com%2F600x-%2FuploadImages%2Fupload%2F20141126%2Fupload%2F201411%2F2boec3joatcjpg.jpg" alt=""><br> <iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&amp;id=33495597&amp;auto=0&amp;height=66"> </iframe></p>
]]></content>
      
        
        <tags>
            
            <tag> 瞎扯淡 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
